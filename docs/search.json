[{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"preamble","dir":"Articles","previous_headings":"","what":"Preamble","title":"easyRasch package vignette","text":"page contains sample Rasch analysis showcase core functions easyRasch package. extensive guide also helps show benefits Quarto publishing system, available : https://pgmj.github.io/raschrvignette/RaschRvign.html strongly recommended go link . ’ve become rather addicted convenience panel-tabsets Quarto offers allow side--side viewing output. unfortunately available generating package article/vignette using pkgdown (AFAIK). Lacking panel-tabsets, page become quite long (say one short either…). NOTE: package previously known RISEkbmRasch new Rasch Measurement Theory, may find intro presentation useful: https://pgmj.github.io/RaschIRTlecture/slides.html separate GitHub repository containing template R-project simplify getting started easyRasch package conducting reproducible Rasch analysis R: https://github.com/pgmj/RISEraschTemplate","code":""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"easyRasch package vignette","text":"vignette walk sample analysis using open dataset polytomous questionnaire data. One aims package simplify reproducible psychometric analysis shed light measurement properties scale, questionnaire test. preprint (Johansson et al. 2023), research group propose basic aspects psychometric analysis include information : Unidimensionality & local independence Response categories (monotonicity) Invariance (Differential Item Functioning) Targeting Measurement uncertainties (reliability) ’ll include several ways investigate measurement properties using Rasch Measurement Theory. also functions package less directly related criteria demonstrated vignette. Please note just sample analysis showcase R package. intended “best practice” psychometric analysis example. can skip ahead Rasch analysis part Section 5 eager look package output :)","code":""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"easyRasch package vignette","text":"Since package intended use Quarto, vignette also created Quarto. “template” .qmd file available can useful handy copy&paste running new analysis. can also download complete copy Quarto/R code produce document . Loading easyRasch package automatically load packages depends . However, desirable explicitly load packages used enable automatic creation citations , using grateful package (see Section 14). use data recent paper investigating “initial elevation effect” (Anvari et al. 2022), focus 10 negative items PANAS. data available OSF website. glimpse() function provides quick overview dataframe. 1856 rows, ie. respondents. variables except Sex Group class dbl, means numeric can decimals. Integer (numeric decimals) also fine purposes. two demographic variables currently class chr (character) need converted factors (fct), later . (import dataset item variables class character, need recode numeric.) set itemlabels dataframe. also done using free LibreOffice Calc MS Excel. Just make sure file structure, two variables named itemnr item contain item variable names item description. item variable names match variable names item dataframe. itemlabels dataframe looks like . Variables invariance tests Differential Item Functioning (DIF) need separated vectors (ideally factors specified levels labels) length number rows dataset. means kind removal respondents/rows missing data needs done separating DIF variables. need check Sex variable coded responses present data. Since 5 respondents using labels outside Female/Male (meaningful statistical analysis), remove complete dataset variables example. Let’s make variable factor (instead class “character”) put vector separate item dataframe. remove DIF demographic variable item dataset. can now make use simple function included package! Let’s move age variable. Sometimes age provided categories, numeric variable age years. Let’s quick look age distribution using histogram, calculate mean, sd range.  Age also needs separate vector, removed item dataframe. also grouping variable needs converted factor. item data remaining dataframe, can easily rename items item dataframe. names match itemlabels variable itemnr. Now set psychometric analysis!","code":"library(easyRasch) # devtools::install_github(\"pgmj/easyRasch\") library(grateful) library(ggrepel) library(car) library(kableExtra) library(readxl) library(tidyverse) library(eRm) library(iarm) library(mirt) library(psych) library(ggplot2) library(psychotree) library(matrixStats) library(reshape) library(knitr) library(patchwork) library(formattable)  library(glue) library(foreach) library(doParallel)  ### some commands exist in multiple packages, here we define preferred ones that are frequently used select <- dplyr::select count <- dplyr::count recode <- car::recode rename <- dplyr::rename df.all <- read_csv(\"https://osf.io/download/6fbr5/\") # you can use this line to load the data directly from the OSF website #df.all <- read_csv(\"vignettes/anvari2022data.csv\") # or this line if you have downloaded the datafile in the /vignettes/articles folder # if you have issues with the link, please try downloading manually using the same URL as above # and read the file from your local drive.  # subset items and demographic variables df <- df.all %>%    select(starts_with(\"PANASD2_1\"),          starts_with(\"PANASD2_20\"),          age,Sex,Group) %>%    select(!PANASD2_10_Active) %>%    select(!PANASD2_1_Attentive) glimpse(df) Rows: 1,856 Columns: 13 $ PANASD2_11_Distressed <dbl> 2, 2, 2, 1, 2, 2, 4, 1, 1, 3, 1, 4, 2, 4, 4, 1, … $ PANASD2_12_Upset      <dbl> 1, 1, 4, 1, 1, 5, 2, 1, 2, 2, 2, 3, 1, 3, 5, 1, … $ PANASD2_13_Hostile    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, … $ PANASD2_14_Irritable  <dbl> 1, 1, 3, 1, 2, 5, 3, 1, 2, 4, 2, 3, 1, 2, 3, 1, … $ PANASD2_15_Scared     <dbl> 1, 1, 3, 1, 1, 4, 1, 1, 1, 2, 2, 2, 1, 4, 4, 1, … $ PANASD2_16_Afraid     <dbl> 1, 1, 4, 1, 1, 3, 1, 1, 1, 3, 1, 2, 1, 4, 4, 1, … $ PANASD2_17_Ashamed    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 2, 1, 4, 1, 1, 3, 1, … $ PANASD2_18_Guilty     <dbl> 2, 1, 2, 1, 1, 3, 3, 1, 1, 3, 1, 4, 1, 1, 3, 1, … $ PANASD2_19_Nervous    <dbl> 1, 1, 2, 1, 2, 4, 4, 1, 1, 4, 2, 4, 2, 1, 5, 1, … $ PANASD2_20_Jittery    <dbl> 1, 2, 3, 1, 1, 2, 3, 3, 2, 1, 2, 2, 1, 1, 4, 1, … $ age                   <dbl> 27, 32, 21, 27, 20, 22, 23, 25, 21, 26, 38, 36, … $ Sex                   <chr> \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Male\"… $ Group                 <chr> \"Later Start\", \"Later Start\", \"Later Start\", \"La… itemlabels <- df %>%    select(starts_with(\"PAN\")) %>%    names() %>%    as_tibble() %>%    separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>%    mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\") itemlabels # A tibble: 10 × 2    itemnr   item    <chr>    <chr>  1 PANAS_11 Distressed  2 PANAS_12 Upset  3 PANAS_13 Hostile  4 PANAS_14 Irritable  5 PANAS_15 Scared  6 PANAS_16 Afraid  7 PANAS_17 Ashamed  8 PANAS_18 Guilty  9 PANAS_19 Nervous 10 PANAS_20 Jittery table(df$Sex) CONSENT REVOKED      DATA EXPIRED            Female              Male                 2                 1               896               955 Prefer not to say                 2 df <- df %>%    filter(Sex %in% c(\"Female\",\"Male\")) dif.sex <- factor(df$Sex) df$Sex <- NULL RIdemographics(dif.sex, \"Sex\") glimpse(df$age) num [1:1851] 27 32 21 27 20 22 23 25 21 26 ... ### simpler version of the ggplot below using base R function hist() # hist(df$age, col = \"#009ca6\") # abline(v = mean(age, na.rm = TRUE)) #  # df %>%  #   summarise(Mean = round(mean(age, na.rm = T),1), #             StDev = round(sd(age, na.rm = T),1) #             )  ggplot(df) +   geom_histogram(aes(x = age),                   fill = \"#009ca6\",                  col = \"black\") +   # add the average as a vertical line   geom_vline(xintercept = mean(df$age),               linewidth = 1.5,              linetype = 2,              col = \"orange\") +   # add a light grey field indicating the standard deviation   annotate(\"rect\", ymin = 0, ymax = Inf,             xmin = (mean(df$age, na.rm = TRUE) - sd(df$age, na.rm = TRUE)), xmax = (mean(df$age, na.rm = TRUE) + sd(df$age, na.rm = TRUE)),             alpha = .2) +   labs(title = \"\",        x = \"Age in years\",        y = \"Number of respondents\",        caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")        ) +   theme(plot.caption = element_text(hjust = 0, face = \"italic\")) dif.age <- df$age df$age <- NULL dif.group <- factor(df$Group) df$Group <- NULL RIdemographics(dif.group, \"Group\") names(df) <- itemlabels$itemnr"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"easyRasch package vignette","text":"use data recent paper investigating “initial elevation effect” (Anvari et al. 2022), focus 10 negative items PANAS. data available OSF website. glimpse() function provides quick overview dataframe. 1856 rows, ie. respondents. variables except Sex Group class dbl, means numeric can decimals. Integer (numeric decimals) also fine purposes. two demographic variables currently class chr (character) need converted factors (fct), later . (import dataset item variables class character, need recode numeric.)","code":"df.all <- read_csv(\"https://osf.io/download/6fbr5/\") # you can use this line to load the data directly from the OSF website #df.all <- read_csv(\"vignettes/anvari2022data.csv\") # or this line if you have downloaded the datafile in the /vignettes/articles folder # if you have issues with the link, please try downloading manually using the same URL as above # and read the file from your local drive.  # subset items and demographic variables df <- df.all %>%    select(starts_with(\"PANASD2_1\"),          starts_with(\"PANASD2_20\"),          age,Sex,Group) %>%    select(!PANASD2_10_Active) %>%    select(!PANASD2_1_Attentive) glimpse(df) Rows: 1,856 Columns: 13 $ PANASD2_11_Distressed <dbl> 2, 2, 2, 1, 2, 2, 4, 1, 1, 3, 1, 4, 2, 4, 4, 1, … $ PANASD2_12_Upset      <dbl> 1, 1, 4, 1, 1, 5, 2, 1, 2, 2, 2, 3, 1, 3, 5, 1, … $ PANASD2_13_Hostile    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, … $ PANASD2_14_Irritable  <dbl> 1, 1, 3, 1, 2, 5, 3, 1, 2, 4, 2, 3, 1, 2, 3, 1, … $ PANASD2_15_Scared     <dbl> 1, 1, 3, 1, 1, 4, 1, 1, 1, 2, 2, 2, 1, 4, 4, 1, … $ PANASD2_16_Afraid     <dbl> 1, 1, 4, 1, 1, 3, 1, 1, 1, 3, 1, 2, 1, 4, 4, 1, … $ PANASD2_17_Ashamed    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 2, 1, 4, 1, 1, 3, 1, … $ PANASD2_18_Guilty     <dbl> 2, 1, 2, 1, 1, 3, 3, 1, 1, 3, 1, 4, 1, 1, 3, 1, … $ PANASD2_19_Nervous    <dbl> 1, 1, 2, 1, 2, 4, 4, 1, 1, 4, 2, 4, 2, 1, 5, 1, … $ PANASD2_20_Jittery    <dbl> 1, 2, 3, 1, 1, 2, 3, 3, 2, 1, 2, 2, 1, 1, 4, 1, … $ age                   <dbl> 27, 32, 21, 27, 20, 22, 23, 25, 21, 26, 38, 36, … $ Sex                   <chr> \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Male\"… $ Group                 <chr> \"Later Start\", \"Later Start\", \"Later Start\", \"La…"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"itemlabels","dir":"Articles","previous_headings":"","what":"Itemlabels","title":"easyRasch package vignette","text":"set itemlabels dataframe. also done using free LibreOffice Calc MS Excel. Just make sure file structure, two variables named itemnr item contain item variable names item description. item variable names match variable names item dataframe. itemlabels dataframe looks like .","code":"itemlabels <- df %>%    select(starts_with(\"PAN\")) %>%    names() %>%    as_tibble() %>%    separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>%    mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\") itemlabels # A tibble: 10 × 2    itemnr   item    <chr>    <chr>  1 PANAS_11 Distressed  2 PANAS_12 Upset  3 PANAS_13 Hostile  4 PANAS_14 Irritable  5 PANAS_15 Scared  6 PANAS_16 Afraid  7 PANAS_17 Ashamed  8 PANAS_18 Guilty  9 PANAS_19 Nervous 10 PANAS_20 Jittery"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"demographics","dir":"Articles","previous_headings":"","what":"Demographics","title":"easyRasch package vignette","text":"Variables invariance tests Differential Item Functioning (DIF) need separated vectors (ideally factors specified levels labels) length number rows dataset. means kind removal respondents/rows missing data needs done separating DIF variables. need check Sex variable coded responses present data. Since 5 respondents using labels outside Female/Male (meaningful statistical analysis), remove complete dataset variables example. Let’s make variable factor (instead class “character”) put vector separate item dataframe. remove DIF demographic variable item dataset. can now make use simple function included package! Let’s move age variable. Sometimes age provided categories, numeric variable age years. Let’s quick look age distribution using histogram, calculate mean, sd range.  Age also needs separate vector, removed item dataframe. also grouping variable needs converted factor. item data remaining dataframe, can easily rename items item dataframe. names match itemlabels variable itemnr. Now set psychometric analysis!","code":"table(df$Sex) CONSENT REVOKED      DATA EXPIRED            Female              Male                 2                 1               896               955 Prefer not to say                 2 df <- df %>%    filter(Sex %in% c(\"Female\",\"Male\")) dif.sex <- factor(df$Sex) df$Sex <- NULL RIdemographics(dif.sex, \"Sex\") glimpse(df$age) num [1:1851] 27 32 21 27 20 22 23 25 21 26 ... ### simpler version of the ggplot below using base R function hist() # hist(df$age, col = \"#009ca6\") # abline(v = mean(age, na.rm = TRUE)) #  # df %>%  #   summarise(Mean = round(mean(age, na.rm = T),1), #             StDev = round(sd(age, na.rm = T),1) #             )  ggplot(df) +   geom_histogram(aes(x = age),                   fill = \"#009ca6\",                  col = \"black\") +   # add the average as a vertical line   geom_vline(xintercept = mean(df$age),               linewidth = 1.5,              linetype = 2,              col = \"orange\") +   # add a light grey field indicating the standard deviation   annotate(\"rect\", ymin = 0, ymax = Inf,             xmin = (mean(df$age, na.rm = TRUE) - sd(df$age, na.rm = TRUE)), xmax = (mean(df$age, na.rm = TRUE) + sd(df$age, na.rm = TRUE)),             alpha = .2) +   labs(title = \"\",        x = \"Age in years\",        y = \"Number of respondents\",        caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")        ) +   theme(plot.caption = element_text(hjust = 0, face = \"italic\")) dif.age <- df$age df$age <- NULL dif.group <- factor(df$Group) df$Group <- NULL RIdemographics(dif.group, \"Group\") names(df) <- itemlabels$itemnr"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"descriptives","dir":"Articles","previous_headings":"","what":"Descriptives","title":"easyRasch package vignette","text":"Let’s familiarize data diving analysis. First, visualize proportion missing data item level. missing data dataset. missing data, also use RImissingP() look respondents missing data much. provides us overall picture data distribution. bonus, oddities/mistakes recoding item data categories numbers clearly visible. R packages Rasch analysis require lowest response category zero, makes necessary us recode data, using range 1-5 0-4. Now, can also look raw distribution sum scores. RIrawdist() function bit crude, since requires responses response categories accurately calculate max min scores.  can see floor effect 11.8% participants responding lowest category items. really necessary, interesting see whether response patterns follow Guttman-like structure. Items persons sorted based lower->higher responses, see color move yellow lower left corner blue upper right corner.  data, see floor effect left, 11.8% respondents yellow, rather weak Guttman structure. also due low variation item locations/difficulties. Since large sample added theme() option remove x-axis text, anyway just blur 1851 respondent row numbers. thin vertical slice figure one respondent. many ways look item level data, ’ll get together tab-panel . RItileplot() probably informative, since provides number responses response category item. usually recommended least ~10 responses category psychometric analysis, matter methodology used. Kudos Solomon Kurz providing idea code tile plot function built! people familiar barplot, probably intuitive understand response distribution within item. However, many items take review, provide overview tileplot stacked bars. section, using Quarto, like items available margin, now ’ll settle table inline.  response patterns skewed items, 10 responses category items helpful analysis.","code":"RImissing(df) [1] \"No missing data.\" RIallresp(df) df <- df %>%    mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))  # always check that your recoding worked as intended. RIallresp(df) RIrawdist(df) RIheatmap(df) +   theme(axis.text.x = element_blank()) RIlistitems(df) RItileplot(df) RIbarstack(df) +   theme_minimal() + # theming is optional, see section 11 for more on this   theme_rise() RIbarplot(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"missing-data","dir":"Articles","previous_headings":"","what":"Missing data","title":"easyRasch package vignette","text":"First, visualize proportion missing data item level. missing data dataset. missing data, also use RImissingP() look respondents missing data much.","code":"RImissing(df) [1] \"No missing data.\""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"overall-responses","dir":"Articles","previous_headings":"","what":"Overall responses","title":"easyRasch package vignette","text":"provides us overall picture data distribution. bonus, oddities/mistakes recoding item data categories numbers clearly visible. R packages Rasch analysis require lowest response category zero, makes necessary us recode data, using range 1-5 0-4. Now, can also look raw distribution sum scores. RIrawdist() function bit crude, since requires responses response categories accurately calculate max min scores.  can see floor effect 11.8% participants responding lowest category items. really necessary, interesting see whether response patterns follow Guttman-like structure. Items persons sorted based lower->higher responses, see color move yellow lower left corner blue upper right corner.  data, see floor effect left, 11.8% respondents yellow, rather weak Guttman structure. also due low variation item locations/difficulties. Since large sample added theme() option remove x-axis text, anyway just blur 1851 respondent row numbers. thin vertical slice figure one respondent.","code":"RIallresp(df) df <- df %>%    mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))  # always check that your recoding worked as intended. RIallresp(df) RIrawdist(df) RIheatmap(df) +   theme(axis.text.x = element_blank())"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"floorceiling-effects","dir":"Articles","previous_headings":"","what":"Floor/ceiling effects","title":"easyRasch package vignette","text":"Now, can also look raw distribution sum scores. RIrawdist() function bit crude, since requires responses response categories accurately calculate max min scores.  can see floor effect 11.8% participants responding lowest category items.","code":"RIrawdist(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"guttman-structure","dir":"Articles","previous_headings":"","what":"Guttman structure","title":"easyRasch package vignette","text":"really necessary, interesting see whether response patterns follow Guttman-like structure. Items persons sorted based lower->higher responses, see color move yellow lower left corner blue upper right corner.  data, see floor effect left, 11.8% respondents yellow, rather weak Guttman structure. also due low variation item locations/difficulties. Since large sample added theme() option remove x-axis text, anyway just blur 1851 respondent row numbers. thin vertical slice figure one respondent.","code":"RIheatmap(df) +   theme(axis.text.x = element_blank())"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-level-descriptives","dir":"Articles","previous_headings":"","what":"Item level descriptives","title":"easyRasch package vignette","text":"many ways look item level data, ’ll get together tab-panel . RItileplot() probably informative, since provides number responses response category item. usually recommended least ~10 responses category psychometric analysis, matter methodology used. Kudos Solomon Kurz providing idea code tile plot function built! people familiar barplot, probably intuitive understand response distribution within item. However, many items take review, provide overview tileplot stacked bars. section, using Quarto, like items available margin, now ’ll settle table inline.  response patterns skewed items, 10 responses category items helpful analysis.","code":"RIlistitems(df) RItileplot(df) RIbarstack(df) +   theme_minimal() + # theming is optional, see section 11 for more on this   theme_rise() RIbarplot(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"tile-plot","dir":"Articles","previous_headings":"","what":"Tile plot","title":"easyRasch package vignette","text":"response patterns skewed items, 10 responses category items helpful analysis.","code":"RItileplot(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"stacked-bars","dir":"Articles","previous_headings":"","what":"Stacked bars","title":"easyRasch package vignette","text":"","code":"RIbarstack(df) +   theme_minimal() + # theming is optional, see section 11 for more on this   theme_rise()"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"barplots","dir":"Articles","previous_headings":"","what":"Barplots","title":"easyRasch package vignette","text":"","code":"RIbarplot(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"sec-rasch","dir":"Articles","previous_headings":"","what":"Rasch analysis 1","title":"easyRasch package vignette","text":"eRm package Conditional Maximum Likelihood (CML) estimation used primarily, Partial Credit Model since polytomous data. also five basic psychometric aspects good recall. Unidimensionality & local independence Response categories Invariance Targeting Measurement uncertainties (reliability) begin looking unidimensionality, response categories, targeting parallel . unidimensionality, mostly interested item fit residual correlations, well PCA residuals loadings first residual contrast. time, disordered response categories can influence item fit extent (vice versa), knowledge targeting can useful necessary remove items due residual correlations. unidimensionality response categories found work adequately, move invariance testing (Differential Item Functioning, DIF). noted DIF evaluated parallel psychometric aspects, since complex issue kept separate section vignette (person fit). Finally, /invariance/DIF also looks acceptable, can investigate reliability/measurement uncertainties. RIitemfit() works dichotomous polytomous data (option needed). important note new (since version 0.2.2, released 2024-08-19) RIitemfit() function uses conditional outfit/infit, robust different sample sizes makes ZSTD unnecessary (Müller 2020). Since distribution item fit statistics known, need use simulation determine appropriate cutoff threshold values current sample items. RIitemfit() can also use simulation based cutoff values use conditional highlighting misfitting items. See blog post simulation based cutoffs details . RIitemfit() can also used without cutoffs conditional highlighting. possibly useful rule--thumb cutoff infit MSQ , use option cutoff = \"Smith98\" (Smith, Schumacker, Bush 1998; Müller 2020). However, cutoff applicable items, can expected average item fit. simulation/bootstrap-based cutoff values accurate every item data. Briefly stated, simulation uses properties current sample items, simulates n iterations data fit Rasch model get empirical distribution item fit can use comparison observed data. also known “parametric bootstrapping”. simulation can take quite bit time run complex data/many items/many participants, /choose use many iterations. insufficient testing done make strong recommendations, think 500 iterations good starting point. reference, simulation , using 10 items 5 response categories 1851 respondents, takes 52 seconds run 8 cpu cores (Macbook Pro M1 Max) 1000 iterations. ’ll cite Ostini & Nering (2006) description outfit infit (pages 86-87): Response residuals can summed respondents obtain item fit measure. Generally, accumulation done squared standardized residuals, divided total number respondents obtain mean square statistic. form, statistic referred unweighted mean square (Masters & Wright, 1997; Wright & Masters, 1982) also come known “outfit” (Smith, Schumacker, & Bush, 1998; Wu, 1997), perhaps highly sensitive outlier responses (Adams & Khoo, 1996; Smith et al., 1998; Wright & Masters, 1982). weighted version statistic developed counteract sensitivity outliers (Smith, 2000). weighted form, squared standardized residual multiplied observed response variance divided sum item response variances. sometimes referred information weighted mean square become known “infit” (Smith et al., 1998; Wu, 1997). low item fit value (sometimes referred “overfitting” Rasch model) indicates responses predictable provide little information. often case items general/broad scope relation latent variable. high item fit value (sometimes referred “underfitting” Rasch model) can indicate several things, often multidimensionality question difficult interpret. instance question asks two things time ambiguous reasons. another useful function iarm package. shows expected observed correlation item score based rest items (Kreiner 2011). Similarly, inverted, item fit, lower observed correlation value expected indicates item may belong dimension. higher expected observed value indicates overfitting possibly redundant item. iarm package (Mueller Santiago 2022) provides several interesting functions assessing item fit, DIF things. functions may included future version easyRasch package. conditional item characteristic curves (ICC’s) using estimated theta (factor score). curves indicate item fit group level, resondents split “class intervals” based sum score/factor score.  similar, even informative flexible, visualization made available RASCHplot package (Buchardt, Christensen, Jensen 2023), needs installed GitHub (see code ). linked paper recommended reading, least descriptions useful options available. sample plots showing conditional ICC’s using raw sum score.  Principal Component Analysis Rasch model residuals. Based rule thumb, first eigenvalue 2.0 support unidimensionality. However, seldom accurate needs complemented checking item fit residual correlations. target value probably 1.75, based experience, really find metric redundant keep coming Winsteps might looking . Speaking Winsteps, “explained variance” comparable Winsteps corresponding metric, since one shows results analysis residuals. Similarly item fit, need run simulations get useful cutoff threshold value residual correlations amongst item pairs large show model fit (Christensen, Makransky, Horton 2017). , simulation can take bit time, necessary set appropriate cutoff value. matrix shows item-pair correlations item residuals, highlights red showing correlations crossing threshold compared average item-pair correlation (item-pairs) (Christensen, Makransky, Horton 2017). Rasch model residual correlations (Yen’s Q3) calculated using mirt package. Another way assess local ()dependence partial gamma coefficients (Kreiner Christensen 2004). also function iarm package. See ?iarm::partgam_LD details.  see item locations loadings first residual contrast. figure can helpful identify clusters data multidimensionality. xlims setting changes x-axis limits plots. default values usually make sense, mostly add option point possibility . can also choose show plots specific items.           response category item curve indicates probably response point latent variable (x axis figure). compact figure.   figure shows well items fit respondents/persons. sort Wright Map shows person locations item threshold locations logit scale. top part shows person location histogram, middle part inverted histogram item threshold locations, bottom part shows individual item threshold locations. histograms also show means standard deviations. items sorted average threshold location (black diamonds). 84% confidence intervals shown around item threshold location. details, see caption text figure. numbers displayed plot can disabled using option numbers = FALSE.  Item fit shows lot issues. Item 18 issues second lowest category disordered. Several items short distances thresholds 1 2, also clearly seen Item Hierarchy figure . Two item-pairs show residual correlations far cutoff value: 15 16 (scared afraid) 17 18 (ashamed guilty) Since item 15 also residual correlation item 19, remove . second pair, item 18 removed since also problems disordered response categories. multiple “diagnostics” review deciding item remove strong residual correlations two items. list commonly used criteria: item fit item threshold locations compared sample locations (targeting) ordering response categories DIF whether residual correlations one item multiple items seen code , chose create copy dataframe removed items omitted. can useful , later stage analysis, want able quickly “go back” reinstate item undo change made.","code":"simfit1 <- RIgetfit(df, iterations = 1000, cpu = 8) # save simulation output to object `simfit1` RIitemfit(df, simfit1) RIrestscore(df) library(iarm) ICCplot(as.data.frame(df),          itemnumber = 1:4,          method = \"cut\",          cinumber = 6, # number of class intervals to split respondents into         itemdescrip = c(\"PANAS_11\",\"PANAS_12\",\"PANAS_13\",\"PANAS_14\")) [1] \"Please press Zoom on the Plots window to see the plot\" library(RASCHplot) # devtools::install_github(\"ERRTG/RASCHplot\")  CICCplot(PCM(df),          which.item = c(1:4),          lower.groups = c(0,7,14,21,28),          grid.items = TRUE) RIpcmPCA(df) simcor1 <- RIgetResidCor(df, iterations = 1000, cpu = 8) RIresidcorr(df, cutoff = simcor1$p99) RIpartgamLD(df) RIloadLoc(df) RIitemCats(df, xlims = c(-5,5)) mirt(df, model=1, itemtype='Rasch', verbose = FALSE) %>%    plot(type=\"trace\", as.table = TRUE,         theta_lim = c(-5,5)) # changes x axis limits # increase fig-height in the chunk option above if you have many items RItargeting(df, xlim = c(-5,4)) # xlim defaults to c(-4,4) if you omit this option RIitemHierarchy(df) removed.items <- c(\"PANAS_15\",\"PANAS_18\")  df_backup <- df  df <- df_backup %>%    select(!any_of(removed.items))"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"conditional-item-fit","dir":"Articles","previous_headings":"","what":"Conditional item fit","title":"easyRasch package vignette","text":"RIitemfit() works dichotomous polytomous data (option needed). important note new (since version 0.2.2, released 2024-08-19) RIitemfit() function uses conditional outfit/infit, robust different sample sizes makes ZSTD unnecessary (Müller 2020). Since distribution item fit statistics known, need use simulation determine appropriate cutoff threshold values current sample items. RIitemfit() can also use simulation based cutoff values use conditional highlighting misfitting items. See blog post simulation based cutoffs details . RIitemfit() can also used without cutoffs conditional highlighting. possibly useful rule--thumb cutoff infit MSQ , use option cutoff = \"Smith98\" (Smith, Schumacker, Bush 1998; Müller 2020). However, cutoff applicable items, can expected average item fit. simulation/bootstrap-based cutoff values accurate every item data. Briefly stated, simulation uses properties current sample items, simulates n iterations data fit Rasch model get empirical distribution item fit can use comparison observed data. also known “parametric bootstrapping”. simulation can take quite bit time run complex data/many items/many participants, /choose use many iterations. insufficient testing done make strong recommendations, think 500 iterations good starting point. reference, simulation , using 10 items 5 response categories 1851 respondents, takes 52 seconds run 8 cpu cores (Macbook Pro M1 Max) 1000 iterations. ’ll cite Ostini & Nering (2006) description outfit infit (pages 86-87): Response residuals can summed respondents obtain item fit measure. Generally, accumulation done squared standardized residuals, divided total number respondents obtain mean square statistic. form, statistic referred unweighted mean square (Masters & Wright, 1997; Wright & Masters, 1982) also come known “outfit” (Smith, Schumacker, & Bush, 1998; Wu, 1997), perhaps highly sensitive outlier responses (Adams & Khoo, 1996; Smith et al., 1998; Wright & Masters, 1982). weighted version statistic developed counteract sensitivity outliers (Smith, 2000). weighted form, squared standardized residual multiplied observed response variance divided sum item response variances. sometimes referred information weighted mean square become known “infit” (Smith et al., 1998; Wu, 1997). low item fit value (sometimes referred “overfitting” Rasch model) indicates responses predictable provide little information. often case items general/broad scope relation latent variable. high item fit value (sometimes referred “underfitting” Rasch model) can indicate several things, often multidimensionality question difficult interpret. instance question asks two things time ambiguous reasons.","code":"simfit1 <- RIgetfit(df, iterations = 1000, cpu = 8) # save simulation output to object `simfit1` RIitemfit(df, simfit1)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-restscore","dir":"Articles","previous_headings":"","what":"Item-restscore","title":"easyRasch package vignette","text":"another useful function iarm package. shows expected observed correlation item score based rest items (Kreiner 2011). Similarly, inverted, item fit, lower observed correlation value expected indicates item may belong dimension. higher expected observed value indicates overfitting possibly redundant item.","code":"RIrestscore(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"conditional-item-characteristic-curves","dir":"Articles","previous_headings":"","what":"Conditional item characteristic curves","title":"easyRasch package vignette","text":"iarm package (Mueller Santiago 2022) provides several interesting functions assessing item fit, DIF things. functions may included future version easyRasch package. conditional item characteristic curves (ICC’s) using estimated theta (factor score). curves indicate item fit group level, resondents split “class intervals” based sum score/factor score.  similar, even informative flexible, visualization made available RASCHplot package (Buchardt, Christensen, Jensen 2023), needs installed GitHub (see code ). linked paper recommended reading, least descriptions useful options available. sample plots showing conditional ICC’s using raw sum score.","code":"library(iarm) ICCplot(as.data.frame(df),          itemnumber = 1:4,          method = \"cut\",          cinumber = 6, # number of class intervals to split respondents into         itemdescrip = c(\"PANAS_11\",\"PANAS_12\",\"PANAS_13\",\"PANAS_14\")) [1] \"Please press Zoom on the Plots window to see the plot\" library(RASCHplot) # devtools::install_github(\"ERRTG/RASCHplot\")  CICCplot(PCM(df),          which.item = c(1:4),          lower.groups = c(0,7,14,21,28),          grid.items = TRUE)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"pca-of-residuals","dir":"Articles","previous_headings":"","what":"PCA of residuals","title":"easyRasch package vignette","text":"Principal Component Analysis Rasch model residuals. Based rule thumb, first eigenvalue 2.0 support unidimensionality. However, seldom accurate needs complemented checking item fit residual correlations. target value probably 1.75, based experience, really find metric redundant keep coming Winsteps might looking . Speaking Winsteps, “explained variance” comparable Winsteps corresponding metric, since one shows results analysis residuals.","code":"RIpcmPCA(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"residual-correlations","dir":"Articles","previous_headings":"","what":"Residual correlations","title":"easyRasch package vignette","text":"Similarly item fit, need run simulations get useful cutoff threshold value residual correlations amongst item pairs large show model fit (Christensen, Makransky, Horton 2017). , simulation can take bit time, necessary set appropriate cutoff value. matrix shows item-pair correlations item residuals, highlights red showing correlations crossing threshold compared average item-pair correlation (item-pairs) (Christensen, Makransky, Horton 2017). Rasch model residual correlations (Yen’s Q3) calculated using mirt package.","code":"simcor1 <- RIgetResidCor(df, iterations = 1000, cpu = 8) RIresidcorr(df, cutoff = simcor1$p99)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"partial-gamma-ld","dir":"Articles","previous_headings":"","what":"Partial gamma LD","title":"easyRasch package vignette","text":"Another way assess local ()dependence partial gamma coefficients (Kreiner Christensen 2004). also function iarm package. See ?iarm::partgam_LD details.","code":"RIpartgamLD(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"st-contrast-loadings","dir":"Articles","previous_headings":"","what":"1st contrast loadings","title":"easyRasch package vignette","text":"see item locations loadings first residual contrast. figure can helpful identify clusters data multidimensionality.","code":"RIloadLoc(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"analysis-of-response-categories","dir":"Articles","previous_headings":"","what":"Analysis of response categories","title":"easyRasch package vignette","text":"xlims setting changes x-axis limits plots. default values usually make sense, mostly add option point possibility . can also choose show plots specific items.           response category item curve indicates probably response point latent variable (x axis figure).","code":"RIitemCats(df, xlims = c(-5,5))"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"response-categories-mirt","dir":"Articles","previous_headings":"","what":"Response categories MIRT","title":"easyRasch package vignette","text":"compact figure.","code":"mirt(df, model=1, itemtype='Rasch', verbose = FALSE) %>%    plot(type=\"trace\", as.table = TRUE,         theta_lim = c(-5,5)) # changes x axis limits"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"targeting","dir":"Articles","previous_headings":"","what":"Targeting","title":"easyRasch package vignette","text":"figure shows well items fit respondents/persons. sort Wright Map shows person locations item threshold locations logit scale. top part shows person location histogram, middle part inverted histogram item threshold locations, bottom part shows individual item threshold locations. histograms also show means standard deviations.","code":"# increase fig-height in the chunk option above if you have many items RItargeting(df, xlim = c(-5,4)) # xlim defaults to c(-4,4) if you omit this option"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-hierarchy","dir":"Articles","previous_headings":"","what":"Item hierarchy","title":"easyRasch package vignette","text":"items sorted average threshold location (black diamonds). 84% confidence intervals shown around item threshold location. details, see caption text figure. numbers displayed plot can disabled using option numbers = FALSE.","code":"RIitemHierarchy(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"analysis-1-comments","dir":"Articles","previous_headings":"","what":"Analysis 1 comments","title":"easyRasch package vignette","text":"Item fit shows lot issues. Item 18 issues second lowest category disordered. Several items short distances thresholds 1 2, also clearly seen Item Hierarchy figure . Two item-pairs show residual correlations far cutoff value: 15 16 (scared afraid) 17 18 (ashamed guilty) Since item 15 also residual correlation item 19, remove . second pair, item 18 removed since also problems disordered response categories. multiple “diagnostics” review deciding item remove strong residual correlations two items. list commonly used criteria: item fit item threshold locations compared sample locations (targeting) ordering response categories DIF whether residual correlations one item multiple items seen code , chose create copy dataframe removed items omitted. can useful , later stage analysis, want able quickly “go back” reinstate item undo change made.","code":"removed.items <- c(\"PANAS_15\",\"PANAS_18\")  df_backup <- df  df <- df_backup %>%    select(!any_of(removed.items))"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"rasch-analysis-2","dir":"Articles","previous_headings":"","what":"Rasch analysis 2","title":"easyRasch package vignette","text":"items 15 18 removed.    Items 16 & 19, 12 & 14 show problematic residual correlations. Let’s look DIF taking action upon information. keeping DIF separate section vignette, recommended include DIF-analysis panel-tabset (item fit, PCA, residual correlations, etc).","code":"simfit2 <- RIgetfit(df, iterations = 1000, cpu = 8) RIitemfit(df, simcut = simfit2) RIpcmPCA(df) simcor2 <- RIgetResidCor(df, iterations = 1000, cpu = 8) RIresidcorr(df, cutoff = simcor2$p99) RIloadLoc(df) RItargeting(df, xlim = c(-4,4), bins = 45) RIitemHierarchy(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"conditional-item-fit-1","dir":"Articles","previous_headings":"","what":"Conditional item fit","title":"easyRasch package vignette","text":"","code":"simfit2 <- RIgetfit(df, iterations = 1000, cpu = 8) RIitemfit(df, simcut = simfit2)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"pca-of-residuals-1","dir":"Articles","previous_headings":"","what":"PCA of residuals","title":"easyRasch package vignette","text":"","code":"RIpcmPCA(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"residual-correlations-1","dir":"Articles","previous_headings":"","what":"Residual correlations","title":"easyRasch package vignette","text":"","code":"simcor2 <- RIgetResidCor(df, iterations = 1000, cpu = 8) RIresidcorr(df, cutoff = simcor2$p99)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"st-contrast-loadings-1","dir":"Articles","previous_headings":"","what":"1st contrast loadings","title":"easyRasch package vignette","text":"","code":"RIloadLoc(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"targeting-1","dir":"Articles","previous_headings":"","what":"Targeting","title":"easyRasch package vignette","text":"","code":"RItargeting(df, xlim = c(-4,4), bins = 45)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-hierarchy-1","dir":"Articles","previous_headings":"","what":"Item hierarchy","title":"easyRasch package vignette","text":"","code":"RIitemHierarchy(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"analysis-2-comments","dir":"Articles","previous_headings":"","what":"Analysis 2 comments","title":"easyRasch package vignette","text":"Items 16 & 19, 12 & 14 show problematic residual correlations. Let’s look DIF taking action upon information. keeping DIF separate section vignette, recommended include DIF-analysis panel-tabset (item fit, PCA, residual correlations, etc).","code":""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"dif---differential-item-functioning","dir":"Articles","previous_headings":"","what":"DIF - differential item functioning","title":"easyRasch package vignette","text":"’ll looking whether item (threshold) locations stable demographic subgroups. several DIF analysis tools available. first one uses package psychotree, relies statistical significance p < .05 indicator DIF. criterion highly sample size sensitive, always interested size/magnitude DIF well, since inform us impact DIF estimated latent variable. structure DIF also important complex aspect, particularly polytomous data. Uniform DIF means DIF similar across latent continuum. can test R using lordif package, demonstrated Section 7.6. However, noted lordif package provide option use Rasch models, may results caused also allowing discrimination parameter vary across items. recent preprint (Henninger et al. 2024) great job illustrating “differential step functioning” (DSF), item threshold locations polytomous data show varying levels DIF. also describes forthcoming development psychotree one can use DIF effect size purification functions evaluate DIF/DSF. updated package available, work implement new functions easyRasch package well. important ensure cells data empty subgroups conducting DIF analysis. Split data using DIF-variable create separate tileplots review response distribution DIF-groups.     item shows problematic levels DIF regarding item location, shown table, interesting pattern thresholds figure. lowest threshold seems slightly lower node 3 (Male) items. Also, item 11 shows much wider spread item locations node 3 compared node 2. results require action since difference small. psychotree package uses model-based recursive partitioning particularly useful continuous variable age years large enough sample. test different ways partition age variable determine potential group differences (Strobl, Kopf, Zeileis 2015; Strobl et al. 2021). DIF found age. DIF group. psychotree package also allows DIF interaction analysis multiple DIF variables. can use RIdifTable2() input two DIF variables.  interaction effect found sex age. analysis shows previously identified DIF sex. ’ll use group variable example. First, can simply run test get overall result. Review documentation details, using ?LRtest R console panel Rstudio. also plotting function, plotGOF() may interest.   item threshold table shows top threshold item 13 differs 0.5 logits groups. set 8 items 4 thresholds , unlikely result problematic differences estimated person scores. lordif package (Choi, Gibbons, Crane 2011) use Rasch measurement model, offers choice Graded Response Model (GRM) Generalized Partial Credit Model (GPCM). 2PL models, meaning estimate discrimination parameter item addition item threshold parameters. lordif relies mirt package. several nice features available lordif package. First, get χ2 test uniform non-uniform DIF. Second, three possible methods/criteria flagging items potential DIF. One uses likelihood ratio (LR) χ2 test, two indicators DIF size/magnitude, either using pseudo R2 statistic (“McFadden”, “Nagelkerke”, “CoxSnell”) Beta criterion. details, see ?lordif R console paper describing package (Choi, Gibbons, Crane 2011). sample code get started lordif. can review results regarding uniform/non-uniform DIF looking chi* columns. Uniform DIF indicated column chi12 non-uniform DIF chi23, column chi13 represents “overall test ”total DIF effect” (Choi, Gibbons, Crane 2011). table indicates significant chi2-tests items 11 17, magnitude estimates low items. plots available well, using base R plot() function. reason plots won’t render Quarto document, try sort point. iarm package provides function assess DIF partial gamma (Bjorner et al. 1998). noted function shows single partial gamma value per item, two groups comparison, want also use methods understand results better. recommended cutoff-values mentioned paper : negligible DIF: Gamma within interval -0.21 0.21, Gamma significantly different 0 Slight moderate DIF: Gamma within interval -0.31 0.31 (outside -0.21 0.21), significantly outside interval -0.21 0.21 Moderate large DIF: Gamma outside interval -0.31 0.31, significantly outside interval -0.21 0.21 can see “slight” DIF item 17, statistically significant gamma .23.","code":"difPlots <- df %>% # save the output into the `difPlots` object   add_column(gender = dif.sex) %>% # add the DIF variable to the dataframe   split(.$gender) %>% # split the data using the DIF variable   map(~ RItileplot(.x %>% dplyr::select(!gender)) + labs(title = .x$gender)) # create separate tileplots for each group  difPlots$Female + difPlots$Male # the actual name of the plots (in this case Male/Female) will be determined by the factor labels RIdifTable(df, dif.sex) RIdifFigure(df, dif.sex) RIdifFigThresh(df, dif.sex) RIdifTable(df, dif.age) [1] \"No statistically significant DIF found.\" RIdifTable(df, dif.group) [1] \"No statistically significant DIF found.\" RIdifTable2(df, dif.sex, dif.age) erm.out <- PCM(df) LRtest(erm.out, splitcr = dif.group) Andersen LR-test: LR-value: 46.864 Chi-square df: 31 p-value:  0.034 RIdifTableLR(df, dif.group) RIdifFigureLR(df, dif.group) + theme_rise() RIdifThreshTblLR(df, dif.group) RIdifThreshFigLR(df, dif.group) + theme_rise() library(lordif)  g_dif <- lordif(as.data.frame(df), as.numeric(dif.sex), # make sure that the data is in a dataframe-object and that the DIF variable is numeric                 criterion = c(\"Chisqr\"),                  alpha = 0.01,                  beta.change = 0.1,                 model = \"GPCM\",                 R2.change = 0.02)  g_dif_sum <- summary(g_dif) # threshold values for colorizing the table below alpha = 0.01 beta.change = 0.1 R2.change = 0.02  g_dif_sum$stats %>%    as.data.frame() %>%    select(!all_of(c(\"item\",\"df12\",\"df13\",\"df23\"))) %>%    round(3) %>%    add_column(itemnr = names(df), .before = \"ncat\") %>%    mutate(across(c(chi12,chi13,chi23), ~ cell_spec(.x,                                color = case_when(                                  .x < alpha ~ \"red\",                                  TRUE ~ \"black\"                                )))) %>%   mutate(across(starts_with(\"pseudo\"), ~ cell_spec(.x,                                color = case_when(                                  .x > R2.change ~ \"red\",                                  TRUE ~ \"black\"                                )))) %>%   mutate(beta12 =  cell_spec(beta12,                                color = case_when(                                  beta12 > beta.change ~ \"red\",                                  TRUE ~ \"black\"                                ))) %>%    kbl_rise() plot(g_dif) # use option `graphics.off()` to get the plots rendered one by one #plot(g_dif, graphics.off()) RIpartgamDIF(df, dif.sex)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"sex","dir":"Articles","previous_headings":"","what":"Sex","title":"easyRasch package vignette","text":"item shows problematic levels DIF regarding item location, shown table, interesting pattern thresholds figure. lowest threshold seems slightly lower node 3 (Male) items. Also, item 11 shows much wider spread item locations node 3 compared node 2. results require action since difference small.","code":"RIdifTable(df, dif.sex) RIdifFigure(df, dif.sex) RIdifFigThresh(df, dif.sex)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"table","dir":"Articles","previous_headings":"","what":"Table","title":"easyRasch package vignette","text":"","code":"RIdifTable(df, dif.sex)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"figure-items","dir":"Articles","previous_headings":"","what":"Figure items","title":"easyRasch package vignette","text":"","code":"RIdifFigure(df, dif.sex)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"figure-thresholds","dir":"Articles","previous_headings":"","what":"Figure thresholds","title":"easyRasch package vignette","text":"item shows problematic levels DIF regarding item location, shown table, interesting pattern thresholds figure. lowest threshold seems slightly lower node 3 (Male) items. Also, item 11 shows much wider spread item locations node 3 compared node 2. results require action since difference small.","code":"RIdifFigThresh(df, dif.sex)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"age","dir":"Articles","previous_headings":"","what":"Age","title":"easyRasch package vignette","text":"psychotree package uses model-based recursive partitioning particularly useful continuous variable age years large enough sample. test different ways partition age variable determine potential group differences (Strobl, Kopf, Zeileis 2015; Strobl et al. 2021). DIF found age.","code":"RIdifTable(df, dif.age) [1] \"No statistically significant DIF found.\""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"group","dir":"Articles","previous_headings":"","what":"Group","title":"easyRasch package vignette","text":"DIF group.","code":"RIdifTable(df, dif.group) [1] \"No statistically significant DIF found.\""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"sex-and-age","dir":"Articles","previous_headings":"","what":"Sex and age","title":"easyRasch package vignette","text":"psychotree package also allows DIF interaction analysis multiple DIF variables. can use RIdifTable2() input two DIF variables.  interaction effect found sex age. analysis shows previously identified DIF sex.","code":"RIdifTable2(df, dif.sex, dif.age)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"sec-diflrt","dir":"Articles","previous_headings":"","what":"LRT-based DIF","title":"easyRasch package vignette","text":"’ll use group variable example. First, can simply run test get overall result. Review documentation details, using ?LRtest R console panel Rstudio. also plotting function, plotGOF() may interest.   item threshold table shows top threshold item 13 differs 0.5 logits groups. set 8 items 4 thresholds , unlikely result problematic differences estimated person scores.","code":"erm.out <- PCM(df) LRtest(erm.out, splitcr = dif.group) Andersen LR-test: LR-value: 46.864 Chi-square df: 31 p-value:  0.034 RIdifTableLR(df, dif.group) RIdifFigureLR(df, dif.group) + theme_rise() RIdifThreshTblLR(df, dif.group) RIdifThreshFigLR(df, dif.group) + theme_rise()"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-location-table","dir":"Articles","previous_headings":"","what":"Item location table","title":"easyRasch package vignette","text":"","code":"RIdifTableLR(df, dif.group)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-location-figure","dir":"Articles","previous_headings":"","what":"Item location figure","title":"easyRasch package vignette","text":"","code":"RIdifFigureLR(df, dif.group) + theme_rise()"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-threshold-table","dir":"Articles","previous_headings":"","what":"Item threshold table","title":"easyRasch package vignette","text":"","code":"RIdifThreshTblLR(df, dif.group)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-threshold-figure","dir":"Articles","previous_headings":"","what":"Item threshold figure","title":"easyRasch package vignette","text":"item threshold table shows top threshold item 13 differs 0.5 logits groups. set 8 items 4 thresholds , unlikely result problematic differences estimated person scores.","code":"RIdifThreshFigLR(df, dif.group) + theme_rise()"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"sec-lordif","dir":"Articles","previous_headings":"","what":"Logistic Ordinal Regression DIF","title":"easyRasch package vignette","text":"lordif package (Choi, Gibbons, Crane 2011) use Rasch measurement model, offers choice Graded Response Model (GRM) Generalized Partial Credit Model (GPCM). 2PL models, meaning estimate discrimination parameter item addition item threshold parameters. lordif relies mirt package. several nice features available lordif package. First, get χ2 test uniform non-uniform DIF. Second, three possible methods/criteria flagging items potential DIF. One uses likelihood ratio (LR) χ2 test, two indicators DIF size/magnitude, either using pseudo R2 statistic (“McFadden”, “Nagelkerke”, “CoxSnell”) Beta criterion. details, see ?lordif R console paper describing package (Choi, Gibbons, Crane 2011). sample code get started lordif. can review results regarding uniform/non-uniform DIF looking chi* columns. Uniform DIF indicated column chi12 non-uniform DIF chi23, column chi13 represents “overall test ”total DIF effect” (Choi, Gibbons, Crane 2011). table indicates significant chi2-tests items 11 17, magnitude estimates low items. plots available well, using base R plot() function. reason plots won’t render Quarto document, try sort point.","code":"library(lordif)  g_dif <- lordif(as.data.frame(df), as.numeric(dif.sex), # make sure that the data is in a dataframe-object and that the DIF variable is numeric                 criterion = c(\"Chisqr\"),                  alpha = 0.01,                  beta.change = 0.1,                 model = \"GPCM\",                 R2.change = 0.02)  g_dif_sum <- summary(g_dif) # threshold values for colorizing the table below alpha = 0.01 beta.change = 0.1 R2.change = 0.02  g_dif_sum$stats %>%    as.data.frame() %>%    select(!all_of(c(\"item\",\"df12\",\"df13\",\"df23\"))) %>%    round(3) %>%    add_column(itemnr = names(df), .before = \"ncat\") %>%    mutate(across(c(chi12,chi13,chi23), ~ cell_spec(.x,                                color = case_when(                                  .x < alpha ~ \"red\",                                  TRUE ~ \"black\"                                )))) %>%   mutate(across(starts_with(\"pseudo\"), ~ cell_spec(.x,                                color = case_when(                                  .x > R2.change ~ \"red\",                                  TRUE ~ \"black\"                                )))) %>%   mutate(beta12 =  cell_spec(beta12,                                color = case_when(                                  beta12 > beta.change ~ \"red\",                                  TRUE ~ \"black\"                                ))) %>%    kbl_rise() plot(g_dif) # use option `graphics.off()` to get the plots rendered one by one #plot(g_dif, graphics.off())"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"partial-gamma-dif","dir":"Articles","previous_headings":"","what":"Partial gamma DIF","title":"easyRasch package vignette","text":"iarm package provides function assess DIF partial gamma (Bjorner et al. 1998). noted function shows single partial gamma value per item, two groups comparison, want also use methods understand results better. recommended cutoff-values mentioned paper : negligible DIF: Gamma within interval -0.21 0.21, Gamma significantly different 0 Slight moderate DIF: Gamma within interval -0.31 0.31 (outside -0.21 0.21), significantly outside interval -0.21 0.21 Moderate large DIF: Gamma outside interval -0.31 0.31, significantly outside interval -0.21 0.21 can see “slight” DIF item 17, statistically significant gamma .23.","code":"RIpartgamDIF(df, dif.sex)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"rasch-analysis-3","dir":"Articles","previous_headings":"","what":"Rasch analysis 3","title":"easyRasch package vignette","text":"significant issues DIF item/subgroup combination, need address previously identified problem: Items 16 19 largest residual correlation. ’ll remove item 19 since item 16 better targeting.    problematic residual correlations remaining. Several items show misfit end sample analysis move show functions. several item thresholds closely located, shown item hierarchy figure. ideal, since inflate reliability estimates. However, modify response categories analysis, note workable dealt trying variations merged response categories achieve better separation threshold locations without disordering.","code":"removed.items <- c(removed.items,\"PANAS_19\")  df_backup2 <- df  df <- df_backup2 %>%    select(!any_of(removed.items)) simfit3 <- RIgetfit(df, iterations = 1000, cpu = 8) RIitemfit(df, simfit3) CICCplot(PCM(df),          which.item = c(1:3,7),          lower.groups = c(0,7,14,21,28),          grid.items = TRUE) simcor3 <- RIgetResidCor(df, iterations = 1000, cpu = 8) RIresidcorr(df, cutoff = simcor3$p99) RItargeting(df, bins = 45) RIitemHierarchy(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-fit","dir":"Articles","previous_headings":"","what":"Item fit","title":"easyRasch package vignette","text":"","code":"simfit3 <- RIgetfit(df, iterations = 1000, cpu = 8) RIitemfit(df, simfit3)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"cicc","dir":"Articles","previous_headings":"","what":"CICC","title":"easyRasch package vignette","text":"","code":"CICCplot(PCM(df),          which.item = c(1:3,7),          lower.groups = c(0,7,14,21,28),          grid.items = TRUE)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"residual-correlations-2","dir":"Articles","previous_headings":"","what":"Residual correlations","title":"easyRasch package vignette","text":"","code":"simcor3 <- RIgetResidCor(df, iterations = 1000, cpu = 8) RIresidcorr(df, cutoff = simcor3$p99)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"targeting-2","dir":"Articles","previous_headings":"","what":"Targeting","title":"easyRasch package vignette","text":"","code":"RItargeting(df, bins = 45)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-hierarchy-2","dir":"Articles","previous_headings":"","what":"Item hierarchy","title":"easyRasch package vignette","text":"","code":"RIitemHierarchy(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"analysis-3-comments","dir":"Articles","previous_headings":"","what":"Analysis 3 comments","title":"easyRasch package vignette","text":"problematic residual correlations remaining. Several items show misfit end sample analysis move show functions. several item thresholds closely located, shown item hierarchy figure. ideal, since inflate reliability estimates. However, modify response categories analysis, note workable dealt trying variations merged response categories achieve better separation threshold locations without disordering.","code":""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"reliability","dir":"Articles","previous_headings":"","what":"Reliability","title":"easyRasch package vignette","text":"figure shows Test Information Function (TIF), indicates reliability items making test/scale (reliability sample). default cutoff value used RItif() TIF = 3.33, corresponds person separation index (PSI) = 0.7. PSI similar reliability coefficients omega alpha, ranging 0 1. can change TIF cutoff using option cutoff, instance cutoff = 2.5 (TIF values range 1 ). 11.8% respondents floor effect based raw sum scored data, figure shows us 41.8% located point items produce PSI 0.7 higher. , note figure shows reliability test/scale, sample. want add sample reliability use option samplePSI = TRUE. details available documentation ?RItif.","code":"RItif(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"person-fit","dir":"Articles","previous_headings":"","what":"Person fit","title":"easyRasch package vignette","text":"can also look respondents fit Rasch model items. default, RIpfit() outputs histogram hex heatmap person infit ZSTD statistic, using +/- 1.96 cutoff values. currently person fit method implemented easyRasch package, curious analyst suggested look package PerFit tools.   can export person fit values new variable dataframe specifying output = \"dataframe\", just want row numbers respondents deviant infit values, output = \"rowid\". can also specify grouping variable visualize person fit different groups.  Person fit useful way identify respondents unexpected response patterns investigate . none functions PerFit package implemented easyRasch, code get started interested using . multiple methods/functions available polytomous dichotomous data, see package documentation. example, ’ll use non-parametric U3 statistic generalized polytomous items (Emons 2008). dataframe shown tab Flagged respondents contains variable named FlaggedID represents row id’s. variable useful one wants filter respondents deviant response patterns (person misfit). indications persons misfit may affect results Andersen’s LR-test DIF (Artner 2016). can remove misfitting persons see affects item fit. Let’s also compare misfitting respondents identified RIpfit().","code":"RIpfit(df) RIpfit(df, group = dif.sex, output = \"heatmap\") library(PerFit) pfit_u3poly <- U3poly(matrix = df,                        Ncat = 5, # make sure to input number of response categories, not thresholds                       IRT.PModel = \"PCM\") cutoff(pfit_u3poly) $Cutoff [1] 0.4111  $Cutoff.SE [1] 0.0177  $Prop.flagged [1] 0.1005  $Tail [1] \"upper\"  $Cutoff.CI   2.5%  97.5% 0.3755 0.4408  attr(,\"class\") [1] \"PerFit.cutoff\" flagged.resp(pfit_u3poly) %>%    pluck(\"Scores\") %>%    as.data.frame() %>%    arrange(desc(PFscores)) FlaggedID It1 It4 It7 It2 It5 It3 It6 PFscores 1         159   0   0   0   0   0   0   1   1.0000 2         168   0   0   0   0   0   0   1   1.0000 3         193   0   0   0   0   0   0   1   1.0000 4         214   0   0   0   0   0   0   1   1.0000 5         222   0   0   0   0   0   4   0   1.0000 6         324   0   0   0   0   0   0   1   1.0000 7         667   0   0   0   0   0   0   1   1.0000 8        1014   0   0   0   0   0   4   0   1.0000 9        1146   0   0   0   0   0   0   1   1.0000 10       1171   0   0   0   0   0   0   1   1.0000 11       1609   0   0   0   0   0   0   2   1.0000 12        555   0   0   0   0   0   3   0   0.9484 13        782   0   0   0   0   0   3   0   0.9484 14       1015   0   0   0   0   0   3   0   0.9484 15        187   0   4   2   4   4   4   4   0.9089 16       1290   0   1   0   0   0   4   0   0.9020 17        225   0   0   0   0   0   2   0   0.8939 18        939   0   0   0   0   0   2   0   0.8939 19       1364   0   0   0   0   0   2   0   0.8939 20       1738   0   0   0   0   0   2   0   0.8939 21       1770   0   0   0   0   0   2   0   0.8939 22       1021   0   1   0   0   0   0   4   0.8880 23         26   0   0   0   0   0   1   0   0.8476 24        596   0   0   0   0   0   1   0   0.8476 25        902   0   0   0   0   0   1   0   0.8476 26       1098   0   0   0   0   0   1   0   0.8476 27       1230   0   0   0   0   0   1   0   0.8476 28       1418   0   0   0   0   0   1   0   0.8476 29       1475   0   0   0   0   0   1   0   0.8476 30       1847   0   0   0   0   0   1   0   0.8476 31       1036   0   2   0   4   4   0   4   0.8127 32         44   4   0   4   0   0   4   0   0.7964 33       1075   0   3   0   4   1   4   4   0.7765 34       1472   4   0   0   0   0   0   4   0.7624 35        463   0   0   4   0   0   0   0   0.7439 36        488   0   0   4   0   0   0   0   0.7439 37       1421   0   0   4   0   0   0   0   0.7439 38       1531   4   4   0   4   0   4   0   0.7272 39        971   0   0   0   0   3   0   0   0.7021 40       1774   0   0   0   4   4   1   3   0.7009 41        446   0   4   2   4   4   3   4   0.6770 42       1673   1   0   0   0   4   0   0   0.6588 43        814   2   0   0   0   1   4   0   0.6560 44        701   0   0   0   0   2   0   0   0.6536 45       1578   0   0   0   0   2   0   0   0.6536 46        487   0   4   2   4   4   1   4   0.6504 47       1258   0   0   3   0   0   0   0   0.6198 48       1681   0   0   3   0   0   0   0   0.6198 49        571   0   0   0   2   0   0   0   0.6101 50       1402   0   0   0   2   0   0   0   0.6101 51       1682   0   0   0   2   0   0   0   0.6101 52        597   0   4   0   0   0   0   0   0.6095 53        994   1   0   0   0   4   0   1   0.6088 54        563   0   2   0   4   0   0   0   0.6067 55        721   4   0   0   0   0   0   0   0.5996 56       1159   4   0   0   0   0   0   0   0.5996 57       1602   4   0   0   0   0   0   0   0.5996 58       1797   4   0   0   0   0   0   0   0.5996 59       1170   4   4   4   0   0   0   0   0.5993 60       1287   4   2   0   4   4   0   0   0.5962 61       1006   0   3   0   4   4   2   0   0.5930 62       1383   0   4   1   4   0   3   2   0.5925 63        541   0   4   4   4   2   2   4   0.5887 64        356   0   0   0   0   1   0   0   0.5825 65        470   0   0   0   0   1   0   0   0.5825 66        567   0   0   0   0   1   0   0   0.5825 67        623   0   0   0   0   1   0   0   0.5825 68        659   0   0   0   0   1   0   0   0.5825 69        710   0   0   0   0   1   0   0   0.5825 70        987   0   0   0   0   1   0   0   0.5825 71       1095   0   0   0   0   1   0   0   0.5825 72       1106   0   0   0   0   1   0   0   0.5825 73       1268   0   0   0   0   1   0   0   0.5825 74       1271   0   0   0   0   1   0   0   0.5825 75       1276   0   0   0   0   1   0   0   0.5825 76       1480   0   0   0   0   1   0   0   0.5825 77       1763   0   0   0   0   1   0   0   0.5825 78        576   0   0   2   0   0   3   0   0.5814 79        690   3   0   0   3   3   0   4   0.5802 80        727   3   0   2   0   0   0   4   0.5778 81        916   0   0   1   0   0   0   3   0.5768 82        712   3   0   0   0   0   3   0   0.5731 83        799   1   4   0   4   0   0   0   0.5687 84        754   0   1   0   0   0   0   3   0.5674 85        717   4   4   4   4   4   0   0   0.5585 86        472   1   0   0   1   4   0   0   0.5560 87        173   3   4   0   4   0   0   0   0.5501 88        851   0   0   1   0   1   0   3   0.5494 89        227   0   0   0   0   1   0   1   0.5386 90        409   0   0   0   0   1   0   1   0.5386 91       1192   0   1   0   0   0   3   0   0.5360 92        247   4   0   1   0   0   0   0   0.5295 93       1758   1   4   0   4   3   3   3   0.5229 94       1703   0   1   0   0   0   0   2   0.5109 95        531   4   1   3   0   4   3   3   0.5095 96        622   0   3   0   0   0   0   0   0.5088 97        762   0   3   0   0   0   0   0   0.5088 98        981   4   0   4   3   1   0   0   0.5079 99        278   1   0   0   2   0   0   3   0.5076 100       584   0   0   0   1   0   0   1   0.5020 101      1045   0   0   0   1   0   0   1   0.5020 102      1191   0   0   0   1   0   0   1   0.5020 103      1556   0   1   0   1   0   3   0   0.4993 104       820   2   0   0   0   0   2   3   0.4985 105       481   1   4   3   2   0   3   4   0.4973 106        38   4   3   0   0   0   0   0   0.4895 107       728   3   4   4   1   3   0   4   0.4889 108        56   0   0   0   1   0   0   0   0.4844 109       183   0   0   0   1   0   0   0   0.4844 110       209   0   0   0   1   0   0   0   0.4844 111       331   0   0   0   1   0   0   0   0.4844 112       410   0   0   0   1   0   0   0   0.4844 113       797   0   0   0   1   0   0   0   0.4844 114       886   0   0   0   1   0   0   0   0.4844 115      1067   0   0   0   1   0   0   0   0.4844 116      1269   0   0   0   1   0   0   0   0.4844 117      1558   0   0   0   1   0   0   0   0.4844 118      1663   0   0   0   1   0   0   0   0.4844 119      1680   0   0   0   1   0   0   0   0.4844 120      1726   0   0   0   1   0   0   0   0.4844 121       197   0   0   0   0   1   1   0   0.4817 122       562   1   0   3   0   0   3   0   0.4802 123       451   3   4   0   0   3   0   3   0.4800 124      1583   0   0   4   2   3   1   1   0.4791 125      1214   0   2   2   3   4   2   4   0.4754 126        73   3   3   0   2   0   4   2   0.4732 127       702   0   3   0   1   0   3   0   0.4732 128      1642   4   0   1   0   0   2   0   0.4725 129       527   0   0   1   0   0   2   0   0.4706 130       857   0   0   1   0   0   2   0   0.4706 131      1311   0   0   1   0   0   2   0   0.4706 132       434   2   0   4   0   1   0   0   0.4691 133       788   4   2   2   4   1   0   4   0.4680 134       606   1   2   2   0   0   0   4   0.4663 misfits <- flagged.resp(pfit_u3poly) %>%    pluck(\"Scores\") %>%    as.data.frame() %>%    pull(FlaggedID)  misfits2 <- RIpfit(df, output = \"rowid\") RIitemfit(df, simcut = simfit3) RIitemfit(df[-misfits,], simcut = simfit3) RIitemfit(df[-misfits2,], simcut = simfit3)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"perfit-sample-code","dir":"Articles","previous_headings":"","what":"PerFit sample code","title":"easyRasch package vignette","text":"none functions PerFit package implemented easyRasch, code get started interested using . multiple methods/functions available polytomous dichotomous data, see package documentation. example, ’ll use non-parametric U3 statistic generalized polytomous items (Emons 2008). dataframe shown tab Flagged respondents contains variable named FlaggedID represents row id’s. variable useful one wants filter respondents deviant response patterns (person misfit). indications persons misfit may affect results Andersen’s LR-test DIF (Artner 2016).","code":"library(PerFit) pfit_u3poly <- U3poly(matrix = df,                        Ncat = 5, # make sure to input number of response categories, not thresholds                       IRT.PModel = \"PCM\") cutoff(pfit_u3poly) $Cutoff [1] 0.4111  $Cutoff.SE [1] 0.0177  $Prop.flagged [1] 0.1005  $Tail [1] \"upper\"  $Cutoff.CI   2.5%  97.5% 0.3755 0.4408  attr(,\"class\") [1] \"PerFit.cutoff\" flagged.resp(pfit_u3poly) %>%    pluck(\"Scores\") %>%    as.data.frame() %>%    arrange(desc(PFscores)) FlaggedID It1 It4 It7 It2 It5 It3 It6 PFscores 1         159   0   0   0   0   0   0   1   1.0000 2         168   0   0   0   0   0   0   1   1.0000 3         193   0   0   0   0   0   0   1   1.0000 4         214   0   0   0   0   0   0   1   1.0000 5         222   0   0   0   0   0   4   0   1.0000 6         324   0   0   0   0   0   0   1   1.0000 7         667   0   0   0   0   0   0   1   1.0000 8        1014   0   0   0   0   0   4   0   1.0000 9        1146   0   0   0   0   0   0   1   1.0000 10       1171   0   0   0   0   0   0   1   1.0000 11       1609   0   0   0   0   0   0   2   1.0000 12        555   0   0   0   0   0   3   0   0.9484 13        782   0   0   0   0   0   3   0   0.9484 14       1015   0   0   0   0   0   3   0   0.9484 15        187   0   4   2   4   4   4   4   0.9089 16       1290   0   1   0   0   0   4   0   0.9020 17        225   0   0   0   0   0   2   0   0.8939 18        939   0   0   0   0   0   2   0   0.8939 19       1364   0   0   0   0   0   2   0   0.8939 20       1738   0   0   0   0   0   2   0   0.8939 21       1770   0   0   0   0   0   2   0   0.8939 22       1021   0   1   0   0   0   0   4   0.8880 23         26   0   0   0   0   0   1   0   0.8476 24        596   0   0   0   0   0   1   0   0.8476 25        902   0   0   0   0   0   1   0   0.8476 26       1098   0   0   0   0   0   1   0   0.8476 27       1230   0   0   0   0   0   1   0   0.8476 28       1418   0   0   0   0   0   1   0   0.8476 29       1475   0   0   0   0   0   1   0   0.8476 30       1847   0   0   0   0   0   1   0   0.8476 31       1036   0   2   0   4   4   0   4   0.8127 32         44   4   0   4   0   0   4   0   0.7964 33       1075   0   3   0   4   1   4   4   0.7765 34       1472   4   0   0   0   0   0   4   0.7624 35        463   0   0   4   0   0   0   0   0.7439 36        488   0   0   4   0   0   0   0   0.7439 37       1421   0   0   4   0   0   0   0   0.7439 38       1531   4   4   0   4   0   4   0   0.7272 39        971   0   0   0   0   3   0   0   0.7021 40       1774   0   0   0   4   4   1   3   0.7009 41        446   0   4   2   4   4   3   4   0.6770 42       1673   1   0   0   0   4   0   0   0.6588 43        814   2   0   0   0   1   4   0   0.6560 44        701   0   0   0   0   2   0   0   0.6536 45       1578   0   0   0   0   2   0   0   0.6536 46        487   0   4   2   4   4   1   4   0.6504 47       1258   0   0   3   0   0   0   0   0.6198 48       1681   0   0   3   0   0   0   0   0.6198 49        571   0   0   0   2   0   0   0   0.6101 50       1402   0   0   0   2   0   0   0   0.6101 51       1682   0   0   0   2   0   0   0   0.6101 52        597   0   4   0   0   0   0   0   0.6095 53        994   1   0   0   0   4   0   1   0.6088 54        563   0   2   0   4   0   0   0   0.6067 55        721   4   0   0   0   0   0   0   0.5996 56       1159   4   0   0   0   0   0   0   0.5996 57       1602   4   0   0   0   0   0   0   0.5996 58       1797   4   0   0   0   0   0   0   0.5996 59       1170   4   4   4   0   0   0   0   0.5993 60       1287   4   2   0   4   4   0   0   0.5962 61       1006   0   3   0   4   4   2   0   0.5930 62       1383   0   4   1   4   0   3   2   0.5925 63        541   0   4   4   4   2   2   4   0.5887 64        356   0   0   0   0   1   0   0   0.5825 65        470   0   0   0   0   1   0   0   0.5825 66        567   0   0   0   0   1   0   0   0.5825 67        623   0   0   0   0   1   0   0   0.5825 68        659   0   0   0   0   1   0   0   0.5825 69        710   0   0   0   0   1   0   0   0.5825 70        987   0   0   0   0   1   0   0   0.5825 71       1095   0   0   0   0   1   0   0   0.5825 72       1106   0   0   0   0   1   0   0   0.5825 73       1268   0   0   0   0   1   0   0   0.5825 74       1271   0   0   0   0   1   0   0   0.5825 75       1276   0   0   0   0   1   0   0   0.5825 76       1480   0   0   0   0   1   0   0   0.5825 77       1763   0   0   0   0   1   0   0   0.5825 78        576   0   0   2   0   0   3   0   0.5814 79        690   3   0   0   3   3   0   4   0.5802 80        727   3   0   2   0   0   0   4   0.5778 81        916   0   0   1   0   0   0   3   0.5768 82        712   3   0   0   0   0   3   0   0.5731 83        799   1   4   0   4   0   0   0   0.5687 84        754   0   1   0   0   0   0   3   0.5674 85        717   4   4   4   4   4   0   0   0.5585 86        472   1   0   0   1   4   0   0   0.5560 87        173   3   4   0   4   0   0   0   0.5501 88        851   0   0   1   0   1   0   3   0.5494 89        227   0   0   0   0   1   0   1   0.5386 90        409   0   0   0   0   1   0   1   0.5386 91       1192   0   1   0   0   0   3   0   0.5360 92        247   4   0   1   0   0   0   0   0.5295 93       1758   1   4   0   4   3   3   3   0.5229 94       1703   0   1   0   0   0   0   2   0.5109 95        531   4   1   3   0   4   3   3   0.5095 96        622   0   3   0   0   0   0   0   0.5088 97        762   0   3   0   0   0   0   0   0.5088 98        981   4   0   4   3   1   0   0   0.5079 99        278   1   0   0   2   0   0   3   0.5076 100       584   0   0   0   1   0   0   1   0.5020 101      1045   0   0   0   1   0   0   1   0.5020 102      1191   0   0   0   1   0   0   1   0.5020 103      1556   0   1   0   1   0   3   0   0.4993 104       820   2   0   0   0   0   2   3   0.4985 105       481   1   4   3   2   0   3   4   0.4973 106        38   4   3   0   0   0   0   0   0.4895 107       728   3   4   4   1   3   0   4   0.4889 108        56   0   0   0   1   0   0   0   0.4844 109       183   0   0   0   1   0   0   0   0.4844 110       209   0   0   0   1   0   0   0   0.4844 111       331   0   0   0   1   0   0   0   0.4844 112       410   0   0   0   1   0   0   0   0.4844 113       797   0   0   0   1   0   0   0   0.4844 114       886   0   0   0   1   0   0   0   0.4844 115      1067   0   0   0   1   0   0   0   0.4844 116      1269   0   0   0   1   0   0   0   0.4844 117      1558   0   0   0   1   0   0   0   0.4844 118      1663   0   0   0   1   0   0   0   0.4844 119      1680   0   0   0   1   0   0   0   0.4844 120      1726   0   0   0   1   0   0   0   0.4844 121       197   0   0   0   0   1   1   0   0.4817 122       562   1   0   3   0   0   3   0   0.4802 123       451   3   4   0   0   3   0   3   0.4800 124      1583   0   0   4   2   3   1   1   0.4791 125      1214   0   2   2   3   4   2   4   0.4754 126        73   3   3   0   2   0   4   2   0.4732 127       702   0   3   0   1   0   3   0   0.4732 128      1642   4   0   1   0   0   2   0   0.4725 129       527   0   0   1   0   0   2   0   0.4706 130       857   0   0   1   0   0   2   0   0.4706 131      1311   0   0   1   0   0   2   0   0.4706 132       434   2   0   4   0   1   0   0   0.4691 133       788   4   2   2   4   1   0   4   0.4680 134       606   1   2   2   0   0   0   4   0.4663"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"u3poly","dir":"Articles","previous_headings":"","what":"U3poly","title":"easyRasch package vignette","text":"","code":"library(PerFit) pfit_u3poly <- U3poly(matrix = df,                        Ncat = 5, # make sure to input number of response categories, not thresholds                       IRT.PModel = \"PCM\")"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"cutoff-information","dir":"Articles","previous_headings":"","what":"Cutoff information","title":"easyRasch package vignette","text":"","code":"cutoff(pfit_u3poly) $Cutoff [1] 0.4111  $Cutoff.SE [1] 0.0177  $Prop.flagged [1] 0.1005  $Tail [1] \"upper\"  $Cutoff.CI   2.5%  97.5% 0.3755 0.4408  attr(,\"class\") [1] \"PerFit.cutoff\""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"flagged-respondents","dir":"Articles","previous_headings":"","what":"Flagged respondents","title":"easyRasch package vignette","text":"dataframe shown tab Flagged respondents contains variable named FlaggedID represents row id’s. variable useful one wants filter respondents deviant response patterns (person misfit). indications persons misfit may affect results Andersen’s LR-test DIF (Artner 2016).","code":"flagged.resp(pfit_u3poly) %>%    pluck(\"Scores\") %>%    as.data.frame() %>%    arrange(desc(PFscores)) FlaggedID It1 It4 It7 It2 It5 It3 It6 PFscores 1         159   0   0   0   0   0   0   1   1.0000 2         168   0   0   0   0   0   0   1   1.0000 3         193   0   0   0   0   0   0   1   1.0000 4         214   0   0   0   0   0   0   1   1.0000 5         222   0   0   0   0   0   4   0   1.0000 6         324   0   0   0   0   0   0   1   1.0000 7         667   0   0   0   0   0   0   1   1.0000 8        1014   0   0   0   0   0   4   0   1.0000 9        1146   0   0   0   0   0   0   1   1.0000 10       1171   0   0   0   0   0   0   1   1.0000 11       1609   0   0   0   0   0   0   2   1.0000 12        555   0   0   0   0   0   3   0   0.9484 13        782   0   0   0   0   0   3   0   0.9484 14       1015   0   0   0   0   0   3   0   0.9484 15        187   0   4   2   4   4   4   4   0.9089 16       1290   0   1   0   0   0   4   0   0.9020 17        225   0   0   0   0   0   2   0   0.8939 18        939   0   0   0   0   0   2   0   0.8939 19       1364   0   0   0   0   0   2   0   0.8939 20       1738   0   0   0   0   0   2   0   0.8939 21       1770   0   0   0   0   0   2   0   0.8939 22       1021   0   1   0   0   0   0   4   0.8880 23         26   0   0   0   0   0   1   0   0.8476 24        596   0   0   0   0   0   1   0   0.8476 25        902   0   0   0   0   0   1   0   0.8476 26       1098   0   0   0   0   0   1   0   0.8476 27       1230   0   0   0   0   0   1   0   0.8476 28       1418   0   0   0   0   0   1   0   0.8476 29       1475   0   0   0   0   0   1   0   0.8476 30       1847   0   0   0   0   0   1   0   0.8476 31       1036   0   2   0   4   4   0   4   0.8127 32         44   4   0   4   0   0   4   0   0.7964 33       1075   0   3   0   4   1   4   4   0.7765 34       1472   4   0   0   0   0   0   4   0.7624 35        463   0   0   4   0   0   0   0   0.7439 36        488   0   0   4   0   0   0   0   0.7439 37       1421   0   0   4   0   0   0   0   0.7439 38       1531   4   4   0   4   0   4   0   0.7272 39        971   0   0   0   0   3   0   0   0.7021 40       1774   0   0   0   4   4   1   3   0.7009 41        446   0   4   2   4   4   3   4   0.6770 42       1673   1   0   0   0   4   0   0   0.6588 43        814   2   0   0   0   1   4   0   0.6560 44        701   0   0   0   0   2   0   0   0.6536 45       1578   0   0   0   0   2   0   0   0.6536 46        487   0   4   2   4   4   1   4   0.6504 47       1258   0   0   3   0   0   0   0   0.6198 48       1681   0   0   3   0   0   0   0   0.6198 49        571   0   0   0   2   0   0   0   0.6101 50       1402   0   0   0   2   0   0   0   0.6101 51       1682   0   0   0   2   0   0   0   0.6101 52        597   0   4   0   0   0   0   0   0.6095 53        994   1   0   0   0   4   0   1   0.6088 54        563   0   2   0   4   0   0   0   0.6067 55        721   4   0   0   0   0   0   0   0.5996 56       1159   4   0   0   0   0   0   0   0.5996 57       1602   4   0   0   0   0   0   0   0.5996 58       1797   4   0   0   0   0   0   0   0.5996 59       1170   4   4   4   0   0   0   0   0.5993 60       1287   4   2   0   4   4   0   0   0.5962 61       1006   0   3   0   4   4   2   0   0.5930 62       1383   0   4   1   4   0   3   2   0.5925 63        541   0   4   4   4   2   2   4   0.5887 64        356   0   0   0   0   1   0   0   0.5825 65        470   0   0   0   0   1   0   0   0.5825 66        567   0   0   0   0   1   0   0   0.5825 67        623   0   0   0   0   1   0   0   0.5825 68        659   0   0   0   0   1   0   0   0.5825 69        710   0   0   0   0   1   0   0   0.5825 70        987   0   0   0   0   1   0   0   0.5825 71       1095   0   0   0   0   1   0   0   0.5825 72       1106   0   0   0   0   1   0   0   0.5825 73       1268   0   0   0   0   1   0   0   0.5825 74       1271   0   0   0   0   1   0   0   0.5825 75       1276   0   0   0   0   1   0   0   0.5825 76       1480   0   0   0   0   1   0   0   0.5825 77       1763   0   0   0   0   1   0   0   0.5825 78        576   0   0   2   0   0   3   0   0.5814 79        690   3   0   0   3   3   0   4   0.5802 80        727   3   0   2   0   0   0   4   0.5778 81        916   0   0   1   0   0   0   3   0.5768 82        712   3   0   0   0   0   3   0   0.5731 83        799   1   4   0   4   0   0   0   0.5687 84        754   0   1   0   0   0   0   3   0.5674 85        717   4   4   4   4   4   0   0   0.5585 86        472   1   0   0   1   4   0   0   0.5560 87        173   3   4   0   4   0   0   0   0.5501 88        851   0   0   1   0   1   0   3   0.5494 89        227   0   0   0   0   1   0   1   0.5386 90        409   0   0   0   0   1   0   1   0.5386 91       1192   0   1   0   0   0   3   0   0.5360 92        247   4   0   1   0   0   0   0   0.5295 93       1758   1   4   0   4   3   3   3   0.5229 94       1703   0   1   0   0   0   0   2   0.5109 95        531   4   1   3   0   4   3   3   0.5095 96        622   0   3   0   0   0   0   0   0.5088 97        762   0   3   0   0   0   0   0   0.5088 98        981   4   0   4   3   1   0   0   0.5079 99        278   1   0   0   2   0   0   3   0.5076 100       584   0   0   0   1   0   0   1   0.5020 101      1045   0   0   0   1   0   0   1   0.5020 102      1191   0   0   0   1   0   0   1   0.5020 103      1556   0   1   0   1   0   3   0   0.4993 104       820   2   0   0   0   0   2   3   0.4985 105       481   1   4   3   2   0   3   4   0.4973 106        38   4   3   0   0   0   0   0   0.4895 107       728   3   4   4   1   3   0   4   0.4889 108        56   0   0   0   1   0   0   0   0.4844 109       183   0   0   0   1   0   0   0   0.4844 110       209   0   0   0   1   0   0   0   0.4844 111       331   0   0   0   1   0   0   0   0.4844 112       410   0   0   0   1   0   0   0   0.4844 113       797   0   0   0   1   0   0   0   0.4844 114       886   0   0   0   1   0   0   0   0.4844 115      1067   0   0   0   1   0   0   0   0.4844 116      1269   0   0   0   1   0   0   0   0.4844 117      1558   0   0   0   1   0   0   0   0.4844 118      1663   0   0   0   1   0   0   0   0.4844 119      1680   0   0   0   1   0   0   0   0.4844 120      1726   0   0   0   1   0   0   0   0.4844 121       197   0   0   0   0   1   1   0   0.4817 122       562   1   0   3   0   0   3   0   0.4802 123       451   3   4   0   0   3   0   3   0.4800 124      1583   0   0   4   2   3   1   1   0.4791 125      1214   0   2   2   3   4   2   4   0.4754 126        73   3   3   0   2   0   4   2   0.4732 127       702   0   3   0   1   0   3   0   0.4732 128      1642   4   0   1   0   0   2   0   0.4725 129       527   0   0   1   0   0   2   0   0.4706 130       857   0   0   1   0   0   2   0   0.4706 131      1311   0   0   1   0   0   2   0   0.4706 132       434   2   0   4   0   1   0   0   0.4691 133       788   4   2   2   4   1   0   4   0.4680 134       606   1   2   2   0   0   0   4   0.4663"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-fit-without-aberrant-responses","dir":"Articles","previous_headings":"","what":"Item fit without aberrant responses","title":"easyRasch package vignette","text":"can remove misfitting persons see affects item fit. Let’s also compare misfitting respondents identified RIpfit().","code":"misfits <- flagged.resp(pfit_u3poly) %>%    pluck(\"Scores\") %>%    as.data.frame() %>%    pull(FlaggedID)  misfits2 <- RIpfit(df, output = \"rowid\") RIitemfit(df, simcut = simfit3) RIitemfit(df[-misfits,], simcut = simfit3) RIitemfit(df[-misfits2,], simcut = simfit3)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"all-respondents","dir":"Articles","previous_headings":"","what":"All respondents","title":"easyRasch package vignette","text":"","code":"RIitemfit(df, simcut = simfit3)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"u3-misfit-removed","dir":"Articles","previous_headings":"","what":"U3 misfit removed","title":"easyRasch package vignette","text":"","code":"RIitemfit(df[-misfits,], simcut = simfit3)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"zstd-misfit-removed","dir":"Articles","previous_headings":"","what":"ZSTD misfit removed","title":"easyRasch package vignette","text":"","code":"RIitemfit(df[-misfits2,], simcut = simfit3)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"item-parameters","dir":"Articles","previous_headings":"","what":"Item parameters","title":"easyRasch package vignette","text":"allow others (oneself) use item parameters estimated estimation person locations/thetas, make item parameters available. function also write csv-file item threshold locations. Estimations person locations/thetas can done thetaEst() function catR package. implemented function RIestThetasOLD(), see details. First, ’ll output parameters table. parameters can also output dataframe file, using option output = \"dataframe\" output = \"file\".","code":"RIitemparams(df)"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"ordinal-sum-score-to-interval-score","dir":"Articles","previous_headings":"","what":"Ordinal sum score to interval score","title":"easyRasch package vignette","text":"table shows corresponding “raw” ordinal sum score values logit scores, standard errors logit value. Interval scores estimated using WL based simulated dataset using item parameters estimated input dataset. choice WL default due lower bias compared ML estimation (Warm 1989). (option hopefully added point create table based item parameters.) figure can also generated illustrate relationship ordinal sum score logit interval score. errorbars default show standard error point, multiplied 1.96.  Based Rasch analysis output item parameters, can estimate individuals location score (also known “theta”). RIestThetas() default uses WLE estimation based item parameters partial credit model (PCM) outputs dataframe person locations (WLE) measurement error (SEM) logit scale. individual standard error measurement (SEM) associated estimated location/score. included output RIestThetas() function SEM variable, seen . can review distribution measurement error figure. can take look distribution person locations (thetas) using histogram.  RIestThetasOLD() can used pre-specified item (threshold) location matrix. choice WL default due lower bias compared ML estimation (Warm 1989). Similarly RIscoreSE() can (may indeed need ) change range logit scores, using option theta_range. default c(-7,7), hopefully work circumstances. like use existing item threshold location matrix, code may helpful: creates matrix object (dataframe), item row, threshold locations columns.","code":"RIscoreSE(df) RIscoreSE(df, output = \"figure\") thetas <- RIestThetas(df)  head(thetas) WLE       SEM 1 -2.5430672 0.7160122 2 -2.0319918 0.6533338 3 -0.1439296 0.3460439 4 -3.6420132 0.6202853 5 -2.0319918 0.6533338 6  0.1980813 0.3520345 hist(thetas$WLE,       col = \"#009ca6\",       main = \"Histogram of person locations (thetas)\",       breaks = 20) itemParameters <- read_csv(\"itemParameters.csv\") %>%    as.matrix()"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"ordinalinterval-figure","dir":"Articles","previous_headings":"","what":"Ordinal/interval figure","title":"easyRasch package vignette","text":"figure can also generated illustrate relationship ordinal sum score logit interval score. errorbars default show standard error point, multiplied 1.96.","code":"RIscoreSE(df, output = \"figure\")"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"estimating-interval-level-person-scores","dir":"Articles","previous_headings":"","what":"Estimating interval level person scores","title":"easyRasch package vignette","text":"Based Rasch analysis output item parameters, can estimate individuals location score (also known “theta”). RIestThetas() default uses WLE estimation based item parameters partial credit model (PCM) outputs dataframe person locations (WLE) measurement error (SEM) logit scale. individual standard error measurement (SEM) associated estimated location/score. included output RIestThetas() function SEM variable, seen . can review distribution measurement error figure. can take look distribution person locations (thetas) using histogram.  RIestThetasOLD() can used pre-specified item (threshold) location matrix. choice WL default due lower bias compared ML estimation (Warm 1989). Similarly RIscoreSE() can (may indeed need ) change range logit scores, using option theta_range. default c(-7,7), hopefully work circumstances. like use existing item threshold location matrix, code may helpful: creates matrix object (dataframe), item row, threshold locations columns.","code":"thetas <- RIestThetas(df)  head(thetas) WLE       SEM 1 -2.5430672 0.7160122 2 -2.0319918 0.6533338 3 -0.1439296 0.3460439 4 -3.6420132 0.6202853 5 -2.0319918 0.6533338 6  0.1980813 0.3520345 hist(thetas$WLE,       col = \"#009ca6\",       main = \"Histogram of person locations (thetas)\",       breaks = 20) itemParameters <- read_csv(\"itemParameters.csv\") %>%    as.matrix()"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"figure-design","dir":"Articles","previous_headings":"","what":"Figure design","title":"easyRasch package vignette","text":"figures created functions can styled (colors, fonts, etc) adding theme settings . can use standard ggplot function theme() related theme-functions. usual possible “stack” theme functions, seen example . can also change coloring, axis limits/breaks, etc, just adding ggplot options + sign. custom theme function, theme_rise(), included easyRasch package. might easier use familiar theme(). instance, might like change font “Lato” item hierarchy figure, make background transparent.  package version 0.1.30.0, RItargeting() function allows flexibility styling , option return list object three separate plots. See NEWS file details. Since RItargeting() function uses patchwork library combine plots, can also make use many functions patchwork includes. instance, can set title specific theme:  order change font text inside plots (“t1” thresholds) need add additional line code. Please note line code updates default settings geom_text() whole session. Also, functions, RIloadLoc(), make use geom_text_repel(), need change code “text” “text_repel”. simple way change font family font size use theme_minimal(base_family = \"Calibri\", base_size = 14). Please see reference page default ggplot themes alternatives theme_minimal().","code":"RIitemHierarchy(df) +   theme_minimal() + # first apply the minimal theme to make the background transparent   theme_rise(fontfamily = \"Lato\") # then apply theme_rise, which simplifies making changes to all plot elements RItargeting(df) + plot_annotation(title = \"Targeting\", theme = theme_rise(fontfamily = \"Arial\")) update_geom_defaults(\"text\", list(family = \"Lato\"))"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"sec-grateful","dir":"Articles","previous_headings":"","what":"Software used","title":"easyRasch package vignette","text":"grateful package nice way give credit packages used making analysis. package can create bibliography file table object, handy automatically creating reference list based packages used (least explicitly loaded).","code":"library(grateful) pkgs <- cite_packages(cite.tidyverse = TRUE,                        output = \"table\",                       bib.file = \"grateful-refs.bib\",                       include.RStudio = TRUE,                       out.dir = getwd()) # If kbl() is used to generate this table, the references will not be added to the Reference list. formattable(pkgs,              table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 13px; font-family: Lato; width: 80%\"')"},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"additional-credits","dir":"Articles","previous_headings":"","what":"Additional credits","title":"easyRasch package vignette","text":"Thanks colleagues RISE providing feedback testing package Windows MacOS platforms. Also, thanks Mike Linacre Jeanette Melin providing useful feedback improve vignette.","code":""},{"path":"https://pgmj.github.io/easyRasch/articles/easyrasch-vignette.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"easyRasch package vignette","text":"","code":"sessionInfo() R version 4.4.1 (2024-06-14) Platform: aarch64-apple-darwin20 Running under: macOS Sonoma 14.6.1  Matrix products: default BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0  locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8  time zone: Europe/Stockholm tzcode source: internal  attached base packages:  [1] parallel  grid      stats4    stats     graphics  grDevices utils  [8] datasets  methods   base  other attached packages:  [1] PerFit_1.4.6      ltm_1.2-0         polycor_0.8-1     msm_1.7.1  [5] MASS_7.3-61       lordif_0.3-3      rms_6.8-1         Hmisc_5.1-3  [9] RASCHplot_0.1.0   knitr_1.48        readxl_1.4.3      car_3.1-2 [13] carData_3.0-5     grateful_0.2.4    easyRasch_0.3     doParallel_1.0.17 [17] iterators_1.0.14  furrr_0.3.1       future_1.34.0     foreach_1.5.2 [21] ggdist_3.3.2      janitor_2.2.0     iarm_0.4.3        hexbin_1.28.4 [25] catR_3.17         glue_1.7.0        ggrepel_0.9.6     patchwork_1.3.0 [29] reshape_0.8.9     matrixStats_1.4.1 psychotree_0.16-1 psychotools_0.7-4 [33] partykit_1.2-22   mvtnorm_1.3-1     libcoin_1.0-10    psych_2.4.6.26 [37] mirt_1.42         lattice_0.22-6    eRm_1.0-6         lubridate_1.9.3 [41] forcats_1.0.0     stringr_1.5.1     dplyr_1.1.4       purrr_1.0.2 [45] readr_2.1.5       tidyr_1.3.1       tibble_3.2.1      ggplot2_3.5.1 [49] tidyverse_2.0.0   kableExtra_1.4.0  formattable_0.2.1  loaded via a namespace (and not attached):   [1] bitops_1.0-8         RColorBrewer_1.1-3   tools_4.4.1   [4] backports_1.5.0      utf8_1.2.4           R6_2.5.1   [7] DT_0.33              vegan_2.6-8          sm_2.2-6.0  [10] mgcv_1.9-1           permute_0.9-7        withr_3.0.1  [13] gridExtra_2.3        progressr_0.14.0     quantreg_5.98  [16] cli_3.6.3            sandwich_3.1-1       labeling_0.4.3  [19] polspline_1.1.25     pbapply_1.7-2        systemfonts_1.1.0  [22] foreign_0.8-87       relimp_1.0-5         svglite_2.1.3  [25] R.utils_2.12.3       parallelly_1.38.0    sessioninfo_1.2.2  [28] rstudioapi_0.16.0    generics_0.1.3       distributional_0.4.0  [31] qvcalc_1.0.3         Matrix_1.7-0         fansi_1.0.6  [34] abind_1.4-5          R.methodsS3_1.8.2    lifecycle_1.0.4  [37] multcomp_1.4-26      yaml_2.3.10          snakecase_0.11.1  [40] inum_1.0-5           ggstance_0.3.7       promises_1.3.0  [43] irtoys_0.2.2         cowplot_1.1.3        pillar_1.9.0  [46] fda_6.1.8            vcdExtra_0.8-5       future.apply_1.11.2  [49] admisc_0.35          codetools_0.2-20     beepr_2.0  [52] data.table_1.16.0    vcd_1.4-12           vctrs_0.6.5  [55] testthat_3.2.1.1     cellranger_1.1.0     gtable_0.3.5  [58] cachem_1.1.0         ks_1.14.2            xfun_0.46  [61] mime_0.12            fds_1.8              pracma_2.4.4  [64] pcaPP_2.0-4          survival_3.7-0       audio_0.1-11  [67] RPushbullet_0.3.4    TH.data_1.1-2        nlme_3.1-165  [70] rprojroot_2.0.4      Deriv_4.1.3          KernSmooth_2.23-24  [73] rpart_4.1.23         colorspace_2.1-1     gnm_1.1-5  [76] nnet_7.3-19          mnormt_2.1.1         tidyselect_1.2.1  [79] compiler_4.4.1       curl_5.2.3           htmlTable_2.4.3  [82] SparseM_1.84-2       expm_0.999-9         xml2_1.3.6  [85] checkmate_2.3.2      scales_1.3.0         lmtest_0.9-40  [88] digest_0.6.37        rainbow_3.8          rmarkdown_2.28  [91] ca_0.71.1            htmltools_0.5.8.1    pkgconfig_2.0.3  [94] base64enc_0.1-3      SimDesign_2.17.1     fastmap_1.2.0  [97] rlang_1.1.4          htmlwidgets_1.6.4    shiny_1.9.1 [100] farver_2.1.2         zoo_1.8-12           jsonlite_1.8.9 [103] mclust_6.1.1         dcurver_0.9.2        R.oo_1.26.0 [106] RCurl_1.98-1.16      magrittr_2.0.3       Formula_1.2-5 [109] munsell_0.5.1        Rcpp_1.0.13          stringi_1.8.4 [112] brio_1.1.5           plyr_1.8.9           listenv_0.9.1 [115] splines_4.4.1        hms_1.1.3            ggpubr_0.6.0 [118] ggsignif_0.6.4       reshape2_1.4.4       GPArotation_2024.3-1 [121] evaluate_1.0.1       renv_1.0.7           deSolve_1.40 [124] tzdb_0.4.0           httpuv_1.6.15        MatrixModels_0.5-3 [127] broom_1.0.7          xtable_1.8-4         rstatix_0.7.2 [130] later_1.3.2          viridisLite_0.4.2    snow_0.4-4 [133] memoise_2.0.1        cluster_2.1.6        corrplot_0.92 [136] timechange_0.3.0     globals_0.16.3       hdrcde_3.4 [139] here_1.0.1"},{"path":[]},{"path":"https://pgmj.github.io/easyRasch/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Magnus Johansson. Author, maintainer.","code":""},{"path":"https://pgmj.github.io/easyRasch/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johansson M (2024). easyRasch: Psychometric Analysis R Rasch Measurement Theory. R package version 0.3.3, https://pgmj.github.io/easyRasch/, https://github.com/pgmj/easyRasch.","code":"@Manual{,   title = {easyRasch: Psychometric Analysis in R with Rasch Measurement Theory},   author = {Magnus Johansson},   year = {2024},   note = {R package version 0.3.3, https://pgmj.github.io/easyRasch/},   url = {https://github.com/pgmj/easyRasch}, }"},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"easyrasch","dir":"","previous_headings":"","what":"Psychometric Analysis in R with Rasch Measurement Theory","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"R package Rasch Measurement Theory based psychometric analysis, intended use Quarto documentation presentation analysis process results. package largely functions wrapper packages Rasch analyses, primarily eRm, mirt, psychotree, iarm, catR. use easyRasch publication, please also cite packages. package intended simplify Rasch analysis process provides easy creation tables figures functions options. package tested MacOS Windows R 4.1 4.4. NOTE: package formerly known RISEkbmRasch. old GitHub page remain available receive updates. Please regularly check Changelog notes updates. vignette recommended reading skimmed README. find sample Rasch analysis vignette, output package functions. vignette produced using Quarto, source code course also available. functions developed analysis polytomous data (two response categories), using Rasch partial credit model (PCM). Also, choice made rely primarily conditional maximum likelihood (CML) estimation item parameters, since robust various conditions enables “person-free assessment”.","code":""},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"First, install pak package: (devtools package installed, can instead use devtools::install_github(\"pgmj/easyRasch\")) install package dependencies: strictly necessary, highly recommended install Quarto (update Rstudio R installation needed): https://quarto.org/docs/get-started/ https://posit.co/download/rstudio-desktop/","code":"install.packages('pak') pak::pkg_install(\"pgmj/easyRasch\")"},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"upgrading","dir":"","previous_headings":"Installation","what":"Upgrading","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"","code":"detach(\"package:easyRasch\", unload = TRUE) # not needed if you haven't loaded the package in your current session pak::pkg_install(\"pgmj/easyRasch\")"},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"using-the-package","dir":"","previous_headings":"","what":"Using the package","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"functions package relatively simple wrappers create outputs tables figures make Rasch analysis process quick visual. primary introduction using package vignette. two data structure requirements: need create dataframe object named itemlabels consists two variables/columns: first variable named itemnr, containing variable names exactly named dataframe containing data (example q1, q2, q3, etc) second variable named item, containing either questionnaire item description (description task, etc) response data want analyze needs dataframe participants rows items columns/variables, response data dataframe. lowest response category needs zero (0) items. See https://pgmj.github.io/datawrangling.html#recoding-response-categories sample R code recoding. need separate demographic variables separate dataframe separate vectors (preferrably labeled factors), analysis differential item functioning (DIF). remove DIF-variables dataframe item data. dataframe item data can contain item data analysis functions work (ID variable demographic variables). Rasch-analysis functions package, separate functions polytomous data (two response options item) dichotomous/binary data. instance, RIitemfitPCM() Partial Credit Model RIitemfitRM() dichotomous Rasch Model. Rating Scale Model (RSM) polytomous data implemented functions. functions default PCM can use option model = \"RM\" dichotomous data: RItargeting() RItif() RIloadLoc() RIestThetas() RIpfit()","code":""},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"notes-on-known-issues","dir":"","previous_headings":"Using the package","what":"Notes on known issues","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"currently checks whether data input functions correct. means need make sure follow instructions , may unexpected outputs difficult interpret error messages. Start using functions descriptive analysis look closely output, usually reveals mistakes data coding demographic variables left item dataset. much missingness data, functions may issues take lot time run. Quarto template file script choosing many responses participant needs included analysis. can experiment run trouble. Currently, RIloadLoc() function work missing data (due underlying PCA function), workaround now run command na.omit() dataframe (ie. RIloadLoc(na.omit(df)). reasons functions taking longer time run lot items (30+), /lot response categories disordered (often happens 4-6 response categories, especially unlabeled questionnaire). RIitemfitPCM2() function, makes use multiple random subsamples avoid inflated infit/outfit ZSTD values runs multiple CPU’s/cores, fail lot missing data responses categories. Increasing sample size /decreasing number parallel CPUs/cores can help. fails, revert function RIitemfitPCM() uses one CPU/core.","code":""},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"for-the-curious","dir":"","previous_headings":"Using the package","what":"For the curious","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"new R, may useful know can easily access code function using base R View() function. example, View(RItargeting) shows code RItargeting() function creates Wright map style figure (installing loading easyRasch package). can also find documentation/help command using command ?RItargeting console (replace RItargeting function interested ). new R, Hadley Wickham’s book “R data science” great place start. Also look Introduction R Tidyverse Sophie Lee.","code":""},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"Magnus Johansson licensed psychologist PhD behavior analysis. works research scientist RISE Research Institutes Sweden, Department System Transition, affiliated researcher Karolinska Institutet. ORCID: 0000-0003-1669-592X Bluesky: @pgmj.bsky.social Mastodon: @pgmj@scicomm.xyz","code":""},{"path":"https://pgmj.github.io/easyRasch/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Psychometric Analysis in R with Rasch Measurement Theory","text":"work licensed Creative Commons Attribution 4.0 International.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_person_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_person_estimates","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_person_estimates","text":"get RIscoreSE() working properly cases theta range til c(-10,10).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_person_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_person_estimates","text":"","code":"RI_iarm_person_estimates(object, properties = F, allperson = F)"},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_person_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_person_estimates","text":"object Output PCM() RM() properties properties allperson respondents ","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_person_estimates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_person_estimates","text":"code package iarm https://github.com/cran/iarm/blob/master/R/Person-Fit.R","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_persons_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_persons_mle","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_persons_mle","text":"get RIscoreSE() working properly cases theta range til c(-10,10).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_persons_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_persons_mle","text":"","code":"RI_iarm_persons_mle(   respm,   thresh,   model = c(\"RM\", \"PCM\"),   theta = rep(0, dim(respm)[1]),   type = c(\"MLE\", \"WLE\"),   extreme = TRUE,   maxit = 20,   maxdelta = 3,   tol = 0.0001,   maxval = 9 )"},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_persons_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_persons_mle","text":"respm temp thresh temp model temp theta temp type temp extreme temp maxit temp maxdelta temp tol temp maxval temp","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RI_iarm_persons_mle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Temporary fix for upstream bug in iarm::person_estimates() — RI_iarm_persons_mle","text":"code package iarm https://github.com/cran/iarm/blob/master/R/Person-Fit.R","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIallresp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create table with summarized responses across all items. — RIallresp","title":"Create table with summarized responses across all items. — RIallresp","text":"Create table summarized responses across items.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIallresp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table with summarized responses across all items. — RIallresp","text":"","code":"RIallresp(dfin, pdf.out, fontsize = 15)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIallresp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table with summarized responses across all items. — RIallresp","text":"dfin Dataframe item data pdf.Set TRUE get PDF-compatible table (kableExtra) fontsize Set font size PDF-compatible table","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbardiv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a stacked diverging bar graph to show response distribution — RIbardiv","title":"Create a stacked diverging bar graph to show response distribution — RIbardiv","text":"function automatically removes respondents missing data.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbardiv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a stacked diverging bar graph to show response distribution — RIbardiv","text":"","code":"RIbardiv(dfin)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIbardiv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a stacked diverging bar graph to show response distribution — RIbardiv","text":"dfin Dataframe item data ","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create individual bar plots for all items. — RIbarplot","title":"Create individual bar plots for all items. — RIbarplot","text":"Create individual bar plots items.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create individual bar plots for all items. — RIbarplot","text":"","code":"RIbarplot(dfin)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIbarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create individual bar plots for all items. — RIbarplot","text":"dfin Dataframe item data ","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbarstack.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a stacked bar graph to show response distribution — RIbarstack","title":"Create a stacked bar graph to show response distribution — RIbarstack","text":"Create stacked bar graph show response distribution","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbarstack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a stacked bar graph to show response distribution — RIbarstack","text":"","code":"RIbarstack(dfin, omit.na = T)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIbarstack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a stacked bar graph to show response distribution — RIbarstack","text":"dfin Dataframe item data omit.na Remove respondents missing data ()","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbootRestscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Item-restscore bootstrapped — RIbootRestscore","title":"Item-restscore bootstrapped — RIbootRestscore","text":"text based ongoing simulation study, 2024-10-22.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbootRestscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Item-restscore bootstrapped — RIbootRestscore","text":"","code":"RIbootRestscore(   dat,   iterations = 200,   samplesize = 600,   cpu = 4,   output = \"table\",   cutoff = 5 )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIbootRestscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Item-restscore bootstrapped — RIbootRestscore","text":"iterations many bootstrap samples run samplesize large sample use bootstrap cpu many CPU's use output Optional \"dataframe\", \"quarto\" knitr::kable() output cutoff Filter include rows % results value data Dataframe response data, 0 lowest response","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIbootRestscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Item-restscore bootstrapped — RIbootRestscore","text":"Item-restscore often indicate false positives (item misfit misfitting) sample size 400 one truly misfitting item data. one misfitting item, false positives can occur sample sizes n = 150-200. Conversely, sample size n = 800, detection rate truly misfitting items 90%, particularly misfitting items location > 1.5 logits sample mean. Thus, one large dataset may useful able use non-parametric bootstrapping replacement get nuanced view probability items actually misfit.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcheckdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check dataframe — RIcheckdata","title":"Check dataframe — RIcheckdata","text":"functions checks items low number responses category.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcheckdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check dataframe — RIcheckdata","text":"","code":"RIcheckdata(data, n = 3)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIcheckdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check dataframe — RIcheckdata","text":"data Font family plot text n Lowest number responses cell","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcheckdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check dataframe — RIcheckdata","text":"Whether issues data (TRUE FALSE)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcheckdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check dataframe — RIcheckdata","text":"now, low number set < 3.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcolorlistitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Show items based on itemlabels file, with coloring options — RIcolorlistitems","title":"Show items based on itemlabels file, with coloring options — RIcolorlistitems","text":"Requires dataframe two columns, labeled \"itemnr\" \"item\", containing information item numbers (qN) item content. dataframe labeled \"itemlabels\".","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcolorlistitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show items based on itemlabels file, with coloring options — RIcolorlistitems","text":"","code":"RIcolorlistitems(items, color)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIcolorlistitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show items based on itemlabels file, with coloring options — RIcolorlistitems","text":"items vector row numbers items colorize background color color background (\"lightblue\" default)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcolorlistitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show items based on itemlabels file, with coloring options — RIcolorlistitems","text":"table items used dataframe","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIcolorlistitems.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show items based on itemlabels file, with coloring options — RIcolorlistitems","text":"Input vector item rows, .e c(1,3,5) colorize items 1, 3 5. Optionally choose background color used. \"Lightblue\" default. Text black, choose light color gives good contrast readability.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdemographics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create table for demographic variables — RIdemographics","title":"Create table for demographic variables — RIdemographics","text":"Input vector demographic variable gender age, desired label, enclosed double quotes.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdemographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table for demographic variables — RIdemographics","text":"","code":"RIdemographics(dif.var, diflabel, ...)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdemographics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table for demographic variables — RIdemographics","text":"dif.var vector demographic variable diflabel variable represents (sex/age/etc), quotes ... Options table, see kbl_rise()","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdemographics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create table for demographic variables — RIdemographics","text":"Sample use: RIdemographics(dif.gender, \"Gender\", width = 40)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigThresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a DIF line graph for item PCM thresholds — RIdifFigThresh","title":"Create a DIF line graph for item PCM thresholds — RIdifFigThresh","text":"Produces panel linegraphs showing item thresholds DIF nodes.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigThresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a DIF line graph for item PCM thresholds — RIdifFigThresh","text":"","code":"RIdifFigThresh(dfin, dif.var)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigThresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a DIF line graph for item PCM thresholds — RIdifFigThresh","text":"dfin Dataframe item data dif.var DIF variable","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigThresh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a DIF line graph for item PCM thresholds — RIdifFigThresh","text":"NOTE: works PCM data variables multiple thresholds, since threshpar() function problems dichotomous data included.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a DIF line graph over time, showing groups' PCM item locations — RIdifFigTime","title":"Create a DIF line graph over time, showing groups' PCM item locations — RIdifFigTime","text":"function specifically intended examining DIF time, create figure follows item location y axis time x axis.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a DIF line graph over time, showing groups' PCM item locations — RIdifFigTime","text":"","code":"RIdifFigTime(dfin, dif.var)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a DIF line graph over time, showing groups' PCM item locations — RIdifFigTime","text":"dfin Dataframe item data dif.var DIF variable","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a DIF line graph, showing groups' PCM item locations — RIdifFigure","title":"Create a DIF line graph, showing groups' PCM item locations — RIdifFigure","text":"Create DIF line graph, showing groups' PCM item locations","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a DIF line graph, showing groups' PCM item locations — RIdifFigure","text":"","code":"RIdifFigure(dfin, dif.var)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a DIF line graph, showing groups' PCM item locations — RIdifFigure","text":"dfin Dataframe item data dif.var DIF variable","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigureLR.html","id":null,"dir":"Reference","previous_headings":"","what":"DIF PCM analysis with panel figure output for items' average locations — RIdifFigureLR","title":"DIF PCM analysis with panel figure output for items' average locations — RIdifFigureLR","text":"Makes use eRm package function LRtest(). Outputs panel figures item average locations 95% confidence intervals.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigureLR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIF PCM analysis with panel figure output for items' average locations — RIdifFigureLR","text":"","code":"RIdifFigureLR(dfin, dif.var)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigureLR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DIF PCM analysis with panel figure output for items' average locations — RIdifFigureLR","text":"dfin Dataframe item data dif.var DIF variable","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigureLR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DIF PCM analysis with panel figure output for items' average locations — RIdifFigureLR","text":"DIF variables need factors length number rows dataset. sample usage: RIdifTableE(df, dif.age)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigureRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a DIF line graph, showing groups' RM item locations — RIdifFigureRM","title":"Create a DIF line graph, showing groups' RM item locations — RIdifFigureRM","text":"Create DIF line graph, showing groups' RM item locations","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigureRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a DIF line graph, showing groups' RM item locations — RIdifFigureRM","text":"","code":"RIdifFigureRM(dfin, dif.var)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifFigureRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a DIF line graph, showing groups' RM item locations — RIdifFigureRM","text":"dfin Dataframe item data dif.var DIF variable","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable.html","id":null,"dir":"Reference","previous_headings":"","what":"DIF PCM analysis - requires having set up dif.variables previously — RIdifTable","title":"DIF PCM analysis - requires having set up dif.variables previously — RIdifTable","text":"Makes use psychotree package, also allows interactions DIF variables, see RIdifTable2().","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIF PCM analysis - requires having set up dif.variables previously — RIdifTable","text":"","code":"RIdifTable(dfin, dif.var, cutoff = 0.5, table = TRUE)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DIF PCM analysis - requires having set up dif.variables previously — RIdifTable","text":"dfin Dataframe item data dif.var DIF variable cutoff Cutoff item location logit difference table highlighting table Set TRUE = output table object, FALSE = dataframe difTablePCM","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DIF PCM analysis - requires having set up dif.variables previously — RIdifTable","text":"DIF variables need vectors length number rows dataset. sample usage: RIdifTable(df, dif.age)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable2.html","id":null,"dir":"Reference","previous_headings":"","what":"DIF PCM interaction analysis — RIdifTable2","title":"DIF PCM interaction analysis — RIdifTable2","text":"Makes use psychotree package. function interaction two DIF variables","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIF PCM interaction analysis — RIdifTable2","text":"","code":"RIdifTable2(dfin, dif.var1, dif.var2, cutoff = 0.5)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DIF PCM interaction analysis — RIdifTable2","text":"dfin Dataframe item data cutoff Cutoff item location logit difference table highlighting dif.var DIF variable","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTable2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DIF PCM interaction analysis — RIdifTable2","text":"DIF variables need vectors length number rows dataset. sample usage: RIdifTable2(df, dif.age, dif.gender)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableLR.html","id":null,"dir":"Reference","previous_headings":"","what":"DIF PCM analysis with table output for item locations — RIdifTableLR","title":"DIF PCM analysis with table output for item locations — RIdifTableLR","text":"Makes use eRm package function LRtest(). Outputs table item average locations, group differences, standard errors.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableLR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIF PCM analysis with table output for item locations — RIdifTableLR","text":"","code":"RIdifTableLR(   dfin,   dif.var,   model = \"PCM\",   sort = FALSE,   fontfamily = \"sans-serif\",   cutoff = 0.5 )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableLR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DIF PCM analysis with table output for item locations — RIdifTableLR","text":"dfin Dataframe item data dif.var DIF variable model Defaults \"PCM\", optional \"RM\" development sort Set TRUE sort table based DIF size fontfamily Set table font cutoff Cutoff item location logit difference table highlighting","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableLR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DIF PCM analysis with table output for item locations — RIdifTableLR","text":"DIF variables need factors length number rows dataset. sample usage: RIdifTableE(df, dif.age)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableRM.html","id":null,"dir":"Reference","previous_headings":"","what":"DIF analysis dichotomous - requires having set up dif.variables — RIdifTableRM","title":"DIF analysis dichotomous - requires having set up dif.variables — RIdifTableRM","text":"Makes use psychotree package, also allows interactions DIF variables, implemented function (yet).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIF analysis dichotomous - requires having set up dif.variables — RIdifTableRM","text":"","code":"RIdifTableRM(dfin, dif.var, cutoff = 0.5)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DIF analysis dichotomous - requires having set up dif.variables — RIdifTableRM","text":"dfin Dataframe item data dif.var DIF variable cutoff Cutoff item location logit difference table highlighting","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifTableRM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DIF analysis dichotomous - requires having set up dif.variables — RIdifTableRM","text":"DIF variables need vectors length number rows dataset. sample usage: RIdifTable(df, dif.age)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshFigLR.html","id":null,"dir":"Reference","previous_headings":"","what":"DIF PCM analysis with panel figure output for item thresholds — RIdifThreshFigLR","title":"DIF PCM analysis with panel figure output for item thresholds — RIdifThreshFigLR","text":"Makes use eRm package function LRtest(). Outputs panel figures item threshold locations 95% confidence intervals.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshFigLR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIF PCM analysis with panel figure output for item thresholds — RIdifThreshFigLR","text":"","code":"RIdifThreshFigLR(dfin, dif.var)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshFigLR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DIF PCM analysis with panel figure output for item thresholds — RIdifThreshFigLR","text":"dfin Dataframe item data dif.var DIF variable","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshFigLR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DIF PCM analysis with panel figure output for item thresholds — RIdifThreshFigLR","text":"DIF variables need factors length number rows dataset. sample usage: RIdifTableE(df, dif.age)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshTblLR.html","id":null,"dir":"Reference","previous_headings":"","what":"DIF PCM analysis with table output for item thresholds — RIdifThreshTblLR","title":"DIF PCM analysis with table output for item thresholds — RIdifThreshTblLR","text":"Makes use eRm package function LRtest(). Outputs table item average locations, group differences, standard errors.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshTblLR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIF PCM analysis with table output for item thresholds — RIdifThreshTblLR","text":"","code":"RIdifThreshTblLR(dfin, dif.var, fontfamily = \"sans-serif\", cutoff = 0.5)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshTblLR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DIF PCM analysis with table output for item thresholds — RIdifThreshTblLR","text":"dfin Dataframe item data dif.var DIF variable fontfamily Set table font cutoff Cutoff item location logit difference table highlighting","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIdifThreshTblLR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DIF PCM analysis with table output for item thresholds — RIdifThreshTblLR","text":"DIF variables need factors length number rows dataset. sample usage: RIdifTableThreshE(df, dif.age, fontfamily = \"Arial\")","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetas.html","id":null,"dir":"Reference","previous_headings":"","what":"Person location estimation — RIestThetas","title":"Person location estimation — RIestThetas","text":"Outputs dataframe person locations (theta) measurement error (SEM) person","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Person location estimation — RIestThetas","text":"","code":"RIestThetas(data, method = \"WLE\")"},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Person location estimation — RIestThetas","text":"data Dataframe response data (demographics etc), items columns method Estimation method (defaults \"WLE\")","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Person location estimation — RIestThetas","text":"IMPORTANT: use complete response data. missing responses, RIestThetasCATr() RIestThetasCATr2() recommended instead. Uses iarm::person_estimates() estimate person locations (thetas) dataframe item data columns persons rows. Defaults use WLE estimation (lower bias MLE, see Warm, 1989) PCM. Note: want use pre-specified set item parameters, please use RIestThetasCATr() RIestThetasCATr2().","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasCATr.html","id":null,"dir":"Reference","previous_headings":"","what":"Person location estimation with parallel processing — RIestThetasCATr","title":"Person location estimation with parallel processing — RIestThetasCATr","text":"Yields 2-3x speed increase using 4-8 CPU cores. Requires library(furrr)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasCATr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Person location estimation with parallel processing — RIestThetasCATr","text":"","code":"RIestThetasCATr(   data,   itemParams,   method = \"WL\",   cpu = 4,   theta_range = c(-10, 10) )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasCATr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Person location estimation with parallel processing — RIestThetasCATr","text":"data Dataframe response data (demographics etc), items columns itemParams Optional item (threshold) location matrix method Estimation method (defaults \"WL\") cpu Number CPUs/cores utilize (default 4) theta_range Range theta (person location) values","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasCATr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Person location estimation with parallel processing — RIestThetasCATr","text":"Outputs vector person locations, one row dataframe. Uses thetaEst function catR package estimate person locations (thetas) dataframe item data columns persons rows. Defaults use WL estimation (lower bias ML, see Warm, 1989).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD.html","id":null,"dir":"Reference","previous_headings":"","what":"Person location estimation (catR version) — RIestThetasOLD","title":"Person location estimation (catR version) — RIestThetasOLD","text":"Outputs vector person locations, one row dataframe.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Person location estimation (catR version) — RIestThetasOLD","text":"","code":"RIestThetasOLD(data, itemParams, method = \"WL\", theta_range = c(-10, 10))"},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Person location estimation (catR version) — RIestThetasOLD","text":"data Dataframe response data (demographics etc), items columns itemParams Optional item (threshold) location matrix method Estimation method (defaults \"WL\") theta_range Range theta (person location) values","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Person location estimation (catR version) — RIestThetasOLD","text":"Uses thetaEst() function catR package estimate person locations (thetas) dataframe item data columns persons rows. Defaults use WL estimation (lower bias ML, see Warm, 1989). version multi-core processing available RIestThetasCATr2().","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD2.html","id":null,"dir":"Reference","previous_headings":"","what":"Person location estimation with parallel processing — RIestThetasOLD2","title":"Person location estimation with parallel processing — RIestThetasOLD2","text":"Yields 2-3x speed increase using 4-8 CPU cores. Requires library(furrr)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Person location estimation with parallel processing — RIestThetasOLD2","text":"","code":"RIestThetasOLD2(   dfin,   itemParams,   model = \"PCM\",   method = \"WL\",   cpu = 4,   theta_range = c(-7, 7) )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Person location estimation with parallel processing — RIestThetasOLD2","text":"dfin Dataframe response data (demographics etc), items columns itemParams Optional item (threshold) location matrix model Rasch model use (use NULL dichotomous data) method Estimation method (defaults \"WL\") cpu Number CPUs/cores utilize (default 4) theta_range Range theta (person location) values","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIestThetasOLD2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Person location estimation with parallel processing — RIestThetasOLD2","text":"NOTE: yet work dichotomous data Outputs vector person locations, one row dataframe. Uses thetaEst function catR package estimate person locations (thetas) dataframe item data columns persons rows. Defaults use WL estimation (lower bias ML, see Warm, 1989) PCM. See ?thetaEst options available.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetResidCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Get simulation based cutoff values for Yen's Q3 residual correlations — RIgetResidCor","title":"Get simulation based cutoff values for Yen's Q3 residual correlations — RIgetResidCor","text":"Based Christensen et al. (2017, DOI: 10.1177/0146621616677520).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetResidCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get simulation based cutoff values for Yen's Q3 residual correlations — RIgetResidCor","text":"","code":"RIgetResidCor(data, iterations, cpu = 4)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetResidCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get simulation based cutoff values for Yen's Q3 residual correlations — RIgetResidCor","text":"data Dataframe response data iterations Number simulation iterations (needed) cpu Number CPU cores use","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetResidCor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get simulation based cutoff values for Yen's Q3 residual correlations — RIgetResidCor","text":"Uses dataframe response data simulate residual correlation values across n simulations based estimated item & person locations. Results include mean, max difference mean max iteration. Also, 95th 99th percentile values reported, latter recommended use RIresidcorr() cutoff value, since max value seems spurious reliant number iterations. Uses multi-core processing. find many cores computer, use parallel::detectCores(). Remember keep 1-2 cores free.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get simulation based cutoff values for item fit values — RIgetfit","title":"Get simulation based cutoff values for item fit values — RIgetfit","text":"function uses response data simulate datasets fit Rasch model find credible range item fit values. function outputs object strongly recommended save object, since takes time run function using many iterations/simulations.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get simulation based cutoff values for item fit values — RIgetfit","text":"","code":"RIgetfit(data, iterations = 250, cpu = 4, na.omit = TRUE)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get simulation based cutoff values for item fit values — RIgetfit","text":"data Dataframe response data iterations Number simulation iterations (use 200-400) cpu Number CPU cores use na.omit Defaults TRUE produce conditional fit comparable values","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get simulation based cutoff values for item fit values — RIgetfit","text":"output list object, can turn used two different functions. importantly, can use RIitemfit() get conditional highlighting cutoff values based sample size item parameters. item gets cutoff thresholds. function RIgetfitPlot() uses package ggdist plot distribution fit values simulation results. Uses multi-core processing. find many cores computer, use parallel::detectCores(). Remember keep 1-2 cores free. Since version 0.2.4.2, default use complete cases simulations, since conditional item fit function uses numbers comparable using method.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetfitPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a plot with distribution of simulation based item fit values — RIgetfitPlot","title":"Creates a plot with distribution of simulation based item fit values — RIgetfitPlot","text":"Uses output RIgetfit() input. Uses median_qi .width = c(.66,.99) ggdist::stat_dotsinterval().","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetfitPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a plot with distribution of simulation based item fit values — RIgetfitPlot","text":"","code":"RIgetfitPlot(simcut, data)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIgetfitPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a plot with distribution of simulation based item fit values — RIgetfitPlot","text":"simcut Output object RIgetfit() data Optional response dataframe plotting observed item fit","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIheatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Guttman-like tileplot/heatmap — RIheatmap","title":"Create a Guttman-like tileplot/heatmap — RIheatmap","text":"Sorts items (y axis) persons (x axis) according respective total score displays color gradient based responses","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIheatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Guttman-like tileplot/heatmap — RIheatmap","text":"","code":"RIheatmap(dfin)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIheatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Guttman-like tileplot/heatmap — RIheatmap","text":"dfin Dataframe item data ","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIinfitLoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot with infit ZSTD and item location ZSTD is sample size sensitive, see ","title":"Plot with infit ZSTD and item location ZSTD is sample size sensitive, see ","text":"Plot infit ZSTD item location ZSTD sample size sensitive, see \"RIitemfitPCM\" options","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIinfitLoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot with infit ZSTD and item location ZSTD is sample size sensitive, see ","text":"","code":"RIinfitLoc(dfin, samplesize, nsamples)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIinfitLoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot with infit ZSTD and item location ZSTD is sample size sensitive, see ","text":"dfin Dataframe item data samplesize Desired sample size multisampling (recommended 250-500) nsamples Desired number samples (recommended range 10-30)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemCats.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual item category probability plots — RIitemCats","title":"Individual item category probability plots — RIitemCats","text":"Uses eRm::PCM() eRm::plotICC().","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemCats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual item category probability plots — RIitemCats","text":"","code":"RIitemCats(data, items = \"all\", xlims = c(-6, 6), legend = FALSE)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemCats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual item category probability plots — RIitemCats","text":"data Dataframe item data items Optionally single item \"q4\", vector c(\"q4\",\"q2\") xlims Start/end point x-axis legend Set position \"left\" desired","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemHierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a figure showing items and thresholds (with CI) — RIitemHierarchy","title":"Create a figure showing items and thresholds (with CI) — RIitemHierarchy","text":"Items sorted item average location. Confidence intervals 84% default enable visual interpretation statistically significant differences (Payton et al., 2003). CI can changed using sem_multiplier option (ie. use 1.96 95% CI).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemHierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a figure showing items and thresholds (with CI) — RIitemHierarchy","text":"","code":"RIitemHierarchy(dfin, numbers = TRUE, sem_multiplier = 1.405)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemHierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a figure showing items and thresholds (with CI) — RIitemHierarchy","text":"dfin Dataframe item data numbers Display text figure item threshold locations sem_multiplier confidence intervals displayed figure","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemHierarchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a figure showing items and thresholds (with CI) — RIitemHierarchy","text":"works partial credit models currently. dichotomous data, use df.erm <- RM(data) followed plotPImap(df.erm, sorted = T)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate conditional outfit & infit MSQ statistics — RIitemfit","title":"Calculate conditional outfit & infit MSQ statistics — RIitemfit","text":"Automatically uses RM (dichotomous data) PCM (polytomous data) depending data structure.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate conditional outfit & infit MSQ statistics — RIitemfit","text":"","code":"RIitemfit(   data,   simcut,   output = \"table\",   sort = \"items\",   cutoff = c(0.001, 0.999),   ... )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate conditional outfit & infit MSQ statistics — RIitemfit","text":"data Dataframe response data simcut Object output RIgetfit() output Optional \"dataframe\" \"quarto\" sort Optional \"infit\" \"outfit\" cutoff Default c(.001,.999) ... Options passed kbl_rise() table creation","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate conditional outfit & infit MSQ statistics — RIitemfit","text":"Uses iarm::out_infit() calculate conditional mean square fit statistics items. See Müller (2020, DOI: 10.1186/s40488-020-00108-7) details. Note: uses complete cases! explicitly mentioned automatic table caption text. Cutoff threshold values simulation data (using option simcut) used quantile() function .001 .999 values filter extremes. Actual cutoff values shown output. Simulated datasets zero responses response category data automatically removed/skipped analysis, means final set iterations may lower specified user. Optional sorting () table output conditional highlighting based simulation cutoff values, either sort = \"infit\" sort = \"outfit. Optional conditional highlighting misfit based rule--thumb values infit MSQ according Smith et al. (1998), since Müller (2020) showed can fairly accurate conditional infit thus useful quick look item fit. Set cutoff = \"Smith98 use.","code":""},{"path":[]},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitPCM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table with Rasch PCM model item fit values for each item. — RIitemfitPCM","text":"","code":"RIitemfitPCM(   dfin,   samplesize,   nsamples,   zstd_min = -1.96,   zstd_max = 1.96,   msq_min = 0.7,   msq_max = 1.3,   fontsize = 15,   fontfamily = \"Lato\",   output = \"table\",   tbl_width = 65,   method = \"conditional\",   simcut = FALSE,   gf )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitPCM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table with Rasch PCM model item fit values for each item. — RIitemfitPCM","text":"dfin Dataframe item data samplesize Desired sample size multisampling (recommended range 200-500) nsamples Desired number samples (recommended range 10-50) zstd_min Lower cutoff level ZSTD zstd_max Upper cutoff level ZSTD msq_min Lower cutoff level MSQ msq_max Upper cutoff level MSQ fontsize Set fontsize table fontfamily Set font family table output Defaults output table. Optional \"dataframe\" \"quarto\" tbl_width Set table width percent method Defaults \"conditional\". Optional \"unconditional\" simcut Set TRUE want use simulation based cutoff values gf output object RIgetfit() needed simcut = TRUE","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitPCM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create table with Rasch PCM model item fit values for each item. — RIitemfitPCM","text":"Defaults using conditional estimates MSQ values (Müller, 2020) estimated using iarm package. Use method = \"unconditional\" \"old\" unconditional MSQ values (using eRm). Since version 0.2.0 (2024-08-15), highly recommended replace rule--thumb cutoff values simulation based cutoffs. See details ?RIgetfit() easy way get set appropriate cutoff values. ZSTD inflated large samples (N > 500). optional function use reduced sample size run analysis using multiple random samples get average ZSTD item runs. using Quarto, YAML execute setting \"cache: yes\" useful chunk option speed things render often. 30-50 samples seems produce stable output, 4-8 probably sufficient quick look approximate ZSTD statistics. recommended use sample size 200-500, based Hagell & Westergren (2016) & Müller (2020).","code":""},{"path":[]},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitPCM2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table with Rasch PCM model item fit values for each item. — RIitemfitPCM2","text":"","code":"RIitemfitPCM2(   dfin,   samplesize = 200,   nsamples = 8,   cpu = 4,   zstd_min = -1.96,   zstd_max = 1.96,   msq_min = 0.7,   msq_max = 1.3,   fontsize = 15,   fontfamily = \"Lato\",   output = \"table\",   tbl_width = 65,   method = \"conditional\" )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitPCM2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table with Rasch PCM model item fit values for each item. — RIitemfitPCM2","text":"dfin Dataframe item data samplesize Desired sample size multisampling (recommended range 200-500) nsamples Desired number samples (recommended range 8-50) cpu Number CPU cores utilize (default = 4) zstd_min Lower cutoff level ZSTD zstd_max Upper cutoff level ZSTD msq_min Lower cutoff level MSQ msq_max Upper cutoff level MSQ fontsize Set fontsize table fontfamily Set font family table output Defaults output table. Optional \"dataframe\" \"quarto\" tbl_width Set table width percent method Defaults \"conditional\". Optional \"unconditional\"","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitPCM2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create table with Rasch PCM model item fit values for each item. — RIitemfitPCM2","text":"Special version RIitemfitPCM() utilizes multiple CPU cores improve performance. Requires library(doParallel). find many cores computer, use parallel::detectCores(), remember keep cores free. See documentation RIitemfitPCM() complete information.","code":""},{"path":[]},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table with Rasch dichotomous model item fit values for each item. — RIitemfitRM","text":"","code":"RIitemfitRM(   dfin,   samplesize,   nsamples,   zstd_min = -1.96,   zstd_max = 1.96,   msq_min = 0.7,   msq_max = 1.3,   fontsize = 15,   fontfamily = \"Lato\",   output = \"table\",   tbl_width = 65,   method = \"conditional\" )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table with Rasch dichotomous model item fit values for each item. — RIitemfitRM","text":"dfin Dataframe item data samplesize Desired sample size multisampling (recommended range 250-500) nsamples Desired number samples (recommended range 10-50) zstd_min Lower cutoff level ZSTD zstd_max Upper cutoff level ZSTD msq_min Lower cutoff level MSQ msq_max Upper cutoff level MSQ fontsize Set font size table fontfamily Set font family table output Defaults output table. Optional \"dataframe\" \"quarto\" tbl_width Set table width percent method Defaults \"conditional\". Optional \"unconditional\"","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemfitRM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create table with Rasch dichotomous model item fit values for each item. — RIitemfitRM","text":"Defaults using conditional estimates MSQ values (Müller, 2020) estimated using iarm package. Use method = \"unconditional\" \"old\" unconditional MSQ values (using eRm). ZSTD inflated large samples (N > 500). Optional function reduce sample size run analysis using multiple random samples get average ZSTD using Quarto/Rmarkdown, \"cache: yes\" useful chunk option speed things . 50 samples seems give stable output, 4-8 probably sufficient quick look approximate ZSTD statistics. recommended use sample size 200-500, based Hagell & Westergren, 2016.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemparams.html","id":null,"dir":"Reference","previous_headings":"","what":"Item parameters summary — RIitemparams","title":"Item parameters summary — RIitemparams","text":"Displays table item threshold locations. Can also output dataframe CSV file.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemparams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Item parameters summary — RIitemparams","text":"","code":"RIitemparams(   dfin,   fontsize = 15,   output = \"table\",   detail = \"thresholds\",   filename = \"item_params.csv\",   tbl_width = 90 )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemparams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Item parameters summary — RIitemparams","text":"dfin Dataframe item data fontsize Option set font size table output Defaults \"table, can set \"dataframe\" \"file\" detail Set \"\" get detailed summary output filename Name file save output tbl_width Width table","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIitemparams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Item parameters summary — RIitemparams","text":"Currently works Partial Credit Model (polytomous data).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistItemsMargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table with the items used in a dataframe — RIlistItemsMargin","title":"Create a table with the items used in a dataframe — RIlistItemsMargin","text":"Depends itemlabels object, see package README.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistItemsMargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table with the items used in a dataframe — RIlistItemsMargin","text":"","code":"RIlistItemsMargin(dfin, fontsize = 11)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistItemsMargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table with the items used in a dataframe — RIlistItemsMargin","text":"dfin Dataframe item data fontsize Defaults 11, optimize desired","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistItemsMargin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a table with the items used in a dataframe — RIlistItemsMargin","text":"Intended use Quarto chunk option column: margin","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Show items based on itemlabels file — RIlistitems","title":"Show items based on itemlabels file — RIlistitems","text":"Requires dataframe two columns, labeled \"itemnr\" \"item\", containing information item numbers/labels item content/description. dataframe labeled itemlabels.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show items based on itemlabels file — RIlistitems","text":"","code":"RIlistitems(dfin, all.items = FALSE, ...)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show items based on itemlabels file — RIlistitems","text":"dfin Dataframe item data .items Set TRUE list items 'itemlabels' df","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show items based on itemlabels file — RIlistitems","text":"table items used dataframe","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIlistitems.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show items based on itemlabels file — RIlistitems","text":"Default behavior list items dataframe. items eliminated analysis process included. items original dataset shown, use option \".items = TRUE\".","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIloadLoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a plot showing the first residual contrast loadings based on a PCA of Rasch model residuals vs item locations. — RIloadLoc","title":"Generates a plot showing the first residual contrast loadings based on a PCA of Rasch model residuals vs item locations. — RIloadLoc","text":"Defaults PCM, use model = \"RM\" dichotomous data.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIloadLoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a plot showing the first residual contrast loadings based on a PCA of Rasch model residuals vs item locations. — RIloadLoc","text":"","code":"RIloadLoc(dfin, output = \"figure\", pcx = c(\"PC1\", \"PC2\", \"PC3\"), model = \"PCM\")"},{"path":"https://pgmj.github.io/easyRasch/reference/RIloadLoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a plot showing the first residual contrast loadings based on a PCA of Rasch model residuals vs item locations. — RIloadLoc","text":"dfin Dataframe item data output Either \"figure\" (default) \"dataframe\" pcx Number principal components output \"dataframe\" model Defaults \"PCM\", use \"RM\" dichotomous data","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIloadLoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a plot showing the first residual contrast loadings based on a PCA of Rasch model residuals vs item locations. — RIloadLoc","text":"plot item locations (y) loadings (x)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIloadLoc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a plot showing the first residual contrast loadings based on a PCA of Rasch model residuals vs item locations. — RIloadLoc","text":"Note. function work missing responses dataset. can temporarily remove respondents missing data running function, ie. RIloadLoc(na.omit(df))","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RImissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a figure with item missing data descriptives for items — RImissing","title":"Creates a figure with item missing data descriptives for items — RImissing","text":"Sample use: RImissing(df, itemStart = \"PSS\")","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RImissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a figure with item missing data descriptives for items — RImissing","text":"","code":"RImissing(data, itemStart)"},{"path":"https://pgmj.github.io/easyRasch/reference/RImissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a figure with item missing data descriptives for items — RImissing","text":"data Dataframe/tibble create table itemStart variable names start , quotes","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RImissing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a figure with item missing data descriptives for items — RImissing","text":"itemStart missing, whole dataframe used.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RImissingP.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a figure with item missing data descriptives for participants — RImissingP","title":"Creates a figure with item missing data descriptives for participants — RImissingP","text":"Sample use: RImissingP(df, itemStart = \"PSS\")","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RImissingP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a figure with item missing data descriptives for participants — RImissingP","text":"","code":"RImissingP(data, itemStart, output, n = 10)"},{"path":"https://pgmj.github.io/easyRasch/reference/RImissingP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a figure with item missing data descriptives for participants — RImissingP","text":"data Dataframe/tibble create table itemStart variable names start , quotes output Optional dataframe participants missing data n large samples, show n participants missing data","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RImissingP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a figure with item missing data descriptives for participants — RImissingP","text":"itemStart missing, whole dataframe used.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIoutfitLoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot with outfit ZSTD and item location ZSTD is sample size sensitive, see ","title":"Plot with outfit ZSTD and item location ZSTD is sample size sensitive, see ","text":"Plot outfit ZSTD item location ZSTD sample size sensitive, see \"RIitemfitPCM\"","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIoutfitLoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot with outfit ZSTD and item location ZSTD is sample size sensitive, see ","text":"","code":"RIoutfitLoc(dfin, samplesize, nsamples)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIoutfitLoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot with outfit ZSTD and item location ZSTD is sample size sensitive, see ","text":"dfin Dataframe item data samplesize Desired sample size multisampling nsamples Desired number samples (recommended range 10-50)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamDIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial gamma analysis of Differential Item Functioning — RIpartgamDIF","title":"Partial gamma analysis of Differential Item Functioning — RIpartgamDIF","text":"simple wrapper iarm::partgam_DIF(). Filters results show statistically significant relationships sorts table absolute value partial gamma.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamDIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial gamma analysis of Differential Item Functioning — RIpartgamDIF","text":"","code":"RIpartgamDIF(data, dif.var, output = \"table\")"},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamDIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial gamma analysis of Differential Item Functioning — RIpartgamDIF","text":"data dataframe response data dif.var vector DIF variable output Defaults HTML table, optional \"quarto\" \"dataframe\"","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamDIF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Partial gamma analysis of Differential Item Functioning — RIpartgamDIF","text":"Conditional highlighting HTML table output set partial gamma > +/-0.21.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamLD.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial gamma analysis of local dependence — RIpartgamLD","title":"Partial gamma analysis of local dependence — RIpartgamLD","text":"simple wrapper iarm::partgam_LD(). Filters results show statistically significant relationships sorts table absolute value partial gamma.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamLD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial gamma analysis of local dependence — RIpartgamLD","text":"","code":"RIpartgamLD(data, output = \"table\")"},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamLD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial gamma analysis of local dependence — RIpartgamLD","text":"data dataframe response data output Defaults HTML table, optional \"quarto\" \"dataframe\"","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpartgamLD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Partial gamma analysis of local dependence — RIpartgamLD","text":"Conditional highlighting HTML table output set partial gamma > 0.21.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric bootstrapping function that outputs simulated datasets — RIpboot","title":"Parametric bootstrapping function that outputs simulated datasets — RIpboot","text":"generic use. Outputs datasets list object.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric bootstrapping function that outputs simulated datasets — RIpboot","text":"","code":"RIpboot(data, iterations, cpu = 4)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIpboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric bootstrapping function that outputs simulated datasets — RIpboot","text":"data dataframe response data iterations many datasets generate cpu Number CPU cores use","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpcmPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the Rasch PCM model using eRm, and conducts a PCA of residuals to get eigenvalues using psych::pca() and reports the top 5 values. Proportion of explained variance is calculated using stats::prcomp(). — RIpcmPCA","title":"Fits the Rasch PCM model using eRm, and conducts a PCA of residuals to get eigenvalues using psych::pca() and reports the top 5 values. Proportion of explained variance is calculated using stats::prcomp(). — RIpcmPCA","text":"Note ?psych::pca: eigen vectors rescaled sqrt eigen values produce component loadings typical factor analysis.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpcmPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the Rasch PCM model using eRm, and conducts a PCA of residuals to get eigenvalues using psych::pca() and reports the top 5 values. Proportion of explained variance is calculated using stats::prcomp(). — RIpcmPCA","text":"","code":"RIpcmPCA(dfin, output = \"table\", fontsize = 15)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIpcmPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the Rasch PCM model using eRm, and conducts a PCA of residuals to get eigenvalues using psych::pca() and reports the top 5 values. Proportion of explained variance is calculated using stats::prcomp(). — RIpcmPCA","text":"dfin Dataframe item data output Defaults \"table\", optional \"dataframe\" fontsize Set font size table","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Person fit — RIpfit","title":"Person fit — RIpfit","text":"Outputs histogram person fit ZSTD plot person fit ZSTD person location/score. Defaults output histogram hex heatmap.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Person fit — RIpfit","text":"","code":"RIpfit(   dfin,   model = \"PCM\",   pointsize = 2.5,   alpha = 0.5,   bins = 30,   group,   output = c(\"hist\", \"heatmap\"),   infit_lim = c(-1.96, 1.96) )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIpfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Person fit — RIpfit","text":"dfin Dataframe item data model Rasch model use, \"PCM\" \"RM\" pointsize Size datapoints grouped view alpha Transparency points (0-1 1 = transparent) bins Number bins hexplot group Optional grouping variable output Can also \"rowid\" dataframe rownumbers infit_lim Lower/upper limit person infit ZSTD","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIpfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Person fit — RIpfit","text":"Optional grouped output colorized points. can also get vector row numbers persons infit ZSTD /+/- 1.96 using output = \"rowid\". full dataframe respondents infit ZSTD estimated theta values output = \"dataframe. desire another cutoff +/- 1.96, can set infit_lim. Note: theta estimation done using ML, optimal sufficient analysis.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrawdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Floor/ceiling effects based on raw data (ordinal scores). Needs at least one data point in each response category to produce correct footnote text. — RIrawdist","title":"Floor/ceiling effects based on raw data (ordinal scores). Needs at least one data point in each response category to produce correct footnote text. — RIrawdist","text":"Floor/ceiling effects based raw data (ordinal scores). Needs least one data point response category produce correct footnote text.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrawdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Floor/ceiling effects based on raw data (ordinal scores). Needs at least one data point in each response category to produce correct footnote text. — RIrawdist","text":"","code":"RIrawdist(dfin)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIrawdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Floor/ceiling effects based on raw data (ordinal scores). Needs at least one data point in each response category to produce correct footnote text. — RIrawdist","text":"dfin Dataframe item data ","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrawdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Floor/ceiling effects based on raw data (ordinal scores). Needs at least one data point in each response category to produce correct footnote text. — RIrawdist","text":"barplot descriptives footnote","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIresidcorr.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation matrix of Rasch residuals — RIresidcorr","title":"Correlation matrix of Rasch residuals — RIresidcorr","text":"Mandatory option set relative cutoff-value average item residual correlations. strongly recommended use function RIgetResidCor() retrieve appropriate cutoff value data.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIresidcorr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation matrix of Rasch residuals — RIresidcorr","text":"","code":"RIresidcorr(data, cutoff, output = \"table\", ...)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIresidcorr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation matrix of Rasch residuals — RIresidcorr","text":"data Dataframe item data cutoff Relative value average item residual correlations output Default HTML table, optional \"quarto\" \"dataframe\" ... Options sent kbl_rise()","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIresidcorr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlation matrix of Rasch residuals — RIresidcorr","text":"Christensen et al. (2017, p.181) write: \"null hypothesis, average correlation residuals negative\"","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrestscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Item-restscore — RIrestscore","title":"Item-restscore — RIrestscore","text":"simple wrapper iarm::item_restscore(), adding information absolute difference expected observed values, item (average) location.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrestscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Item-restscore — RIrestscore","text":"","code":"RIrestscore(data, output = \"table\", sort, p.adj = \"BH\")"},{"path":"https://pgmj.github.io/easyRasch/reference/RIrestscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Item-restscore — RIrestscore","text":"data dataframe response data output Defaults HTML table, optional \"quarto\" \"dataframe\" sort Optional sorting absolute difference (descending) p.adj See ?item_restscore() options (BH default)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrestscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Item-restscore — RIrestscore","text":"Please note item-restscore likely produce false positives sample size > 600. recommended use RIbootRestscore() large samples.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrmPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the Rasch model for dichotomous data using eRm, and conducts a PCA of residuals to get eigenvalues. — RIrmPCA","title":"Fits the Rasch model for dichotomous data using eRm, and conducts a PCA of residuals to get eigenvalues. — RIrmPCA","text":"Fits Rasch model dichotomous data using eRm, conducts PCA residuals get eigenvalues.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIrmPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the Rasch model for dichotomous data using eRm, and conducts a PCA of residuals to get eigenvalues. — RIrmPCA","text":"","code":"RIrmPCA(dfin, no.table, fontsize = 15)"},{"path":"https://pgmj.github.io/easyRasch/reference/RIrmPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the Rasch model for dichotomous data using eRm, and conducts a PCA of residuals to get eigenvalues. — RIrmPCA","text":"dfin Dataframe item data .table Set TRUE avoid output table fontsize Set font size","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIscoreSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw sum score to logit score transformation table & figure — RIscoreSE","title":"Raw sum score to logit score transformation table & figure — RIscoreSE","text":"default displays table raw sum scores corresponding logit score logit standard error. Depends functions package iarm.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIscoreSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw sum score to logit score transformation table & figure — RIscoreSE","text":"","code":"RIscoreSE(   data,   output = \"table\",   point_size = 3,   error_width = 0.5,   error_multiplier = 1.96,   ... )"},{"path":"https://pgmj.github.io/easyRasch/reference/RIscoreSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw sum score to logit score transformation table & figure — RIscoreSE","text":"data Dataframe item data output Options: \"table\" (default), \"figure\", \"dataframe\" point_size Point size figure error_width Width error bar ends figure error_multiplier Range error bars multiply SEM ... Options kbl_rise() table creation","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RIscoreSE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raw sum score to logit score transformation table & figure — RIscoreSE","text":"Automatically chooses PCM RM depending data structure. Optional figure dataframe output. NOTE: figure uses coord_flip(), take account wish add theming.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItargeting.html","id":null,"dir":"Reference","previous_headings":"","what":"Targeting, Wright map derivative. — RItargeting","title":"Targeting, Wright map derivative. — RItargeting","text":"Outputs figure consisting three figures scale top . top histogram Person Locations, dotted line gray field indicating mean/SD. middle similar histogram Item Thresholds. bottom figure showing individual item thresholds dots.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItargeting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Targeting, Wright map derivative. — RItargeting","text":"","code":"RItargeting(dfin, model = \"PCM\", xlim = c(-4, 4), output = \"figure\", bins = 30)"},{"path":"https://pgmj.github.io/easyRasch/reference/RItargeting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Targeting, Wright map derivative. — RItargeting","text":"dfin Dataframe item data model Defaults \"PCM\", use \"RM\" dichotomous data xlim Optionally, set lower/upper limits x axis output Default \"figure\", \"list\" output 3 figures list object bins Optionally, set number bins histograms","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItargeting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Targeting, Wright map derivative. — RItargeting","text":"figure made three figures using library(patchwork). desired, can output three figures list object instead single figure. allows modify figure (change theming, colors, etc). can put together three figures one using patchwork: list$p1 / list$p2 / list$p3 + plot_layout(heights = c(1, 1, 1.4))","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItif.html","id":null,"dir":"Reference","previous_headings":"","what":"Reliability of test — RItif","title":"Reliability of test — RItif","text":"Test information shows reliability curve test (sample).","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reliability of test — RItif","text":"","code":"RItif(dfin, lo = -5, hi = 5, samplePSI = FALSE, cutoff = 3.33, model = \"PCM\")"},{"path":"https://pgmj.github.io/easyRasch/reference/RItif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reliability of test — RItif","text":"dfin Dataframe item data lo Lower limit x axis (default = -5) hi Upper limit x axis (default = 5) samplePSI Adds information sample characteristics cutoff Caption text generate information relative TIF value model Defaults \"PCM\", use \"RM\" dichotomous data","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reliability of test — RItif","text":"Use option samplePSI = TRUE add graphical written representation current sample's theta mean/SD, test information (TIF) mean/SD, Person Separation Index (PSI). According Wright & Stone (1999), PSI calculated \\(\\frac{\\mathrm{SSD}-\\mathrm{MSE}}{\\mathrm{SSD}}\\), see ?eRm::SepRel details. According Embretson & Reise (2000), PSI = 1 - SEM^2, TIF = 1/SEM^2, values reported function based sample average SEM. reference: TIF 2.5 corresponds PSI 0.6 TIF 3.33 -> PSI 0.7 TIF 5 -> PSI 0.8 TIF 10 -> PSI 0.9","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItileplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create tile plot for all items, also showing the count of responses in each response category for each item — RItileplot","title":"Create tile plot for all items, also showing the count of responses in each response category for each item — RItileplot","text":"Create tile plot items, also showing count responses response category item","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/RItileplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create tile plot for all items, also showing the count of responses in each response category for each item — RItileplot","text":"","code":"RItileplot(   data,   cutoff = 10,   highlight = TRUE,   percent = FALSE,   text_color = \"orange\" )"},{"path":"https://pgmj.github.io/easyRasch/reference/RItileplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create tile plot for all items, also showing the count of responses in each response category for each item — RItileplot","text":"data Dataframe item data cutoff Conditional highlighting text cells n cutoff highlight Defaults TRUE. Set FALSE disable text highlighting percent Set TRUE replace n percentage item responses","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/SimPartialScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate polytomous Rasch model data for a set of items — SimPartialScore","title":"Simulate polytomous Rasch model data for a set of items — SimPartialScore","text":"Documentation expanded later point time.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/SimPartialScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate polytomous Rasch model data for a set of items — SimPartialScore","text":"","code":"SimPartialScore(deltaslist, thetavec)"},{"path":"https://pgmj.github.io/easyRasch/reference/SimPartialScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate polytomous Rasch model data for a set of items — SimPartialScore","text":"deltaslist List object item threshold locations thetas Vector person thetas/scores","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/SimPolyItem.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate polytomous Rasch model data for a single item — SimPolyItem","title":"Simulate polytomous Rasch model data for a single item — SimPolyItem","text":"Documentation expanded (/translated English) later point time.","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/SimPolyItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate polytomous Rasch model data for a single item — SimPolyItem","text":"","code":"SimPolyItem(x, thetas)"},{"path":"https://pgmj.github.io/easyRasch/reference/SimPolyItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate polytomous Rasch model data for a single item — SimPolyItem","text":"x Vector item threshold locations thetas Vector person thetas/scores","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/kbl_rise.html","id":null,"dir":"Reference","previous_headings":"","what":"A kableExtra function to simplify table creation — kbl_rise","title":"A kableExtra function to simplify table creation — kbl_rise","text":"kableExtra function simplify table creation","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/kbl_rise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A kableExtra function to simplify table creation — kbl_rise","text":"","code":"kbl_rise(   data,   tbl_width = 65,   fontsize = 14,   fontfamily = \"Arial\",   options = c(\"striped\", \"hover\"),   ... )"},{"path":"https://pgmj.github.io/easyRasch/reference/kbl_rise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A kableExtra function to simplify table creation — kbl_rise","text":"data Dataframe/tibble create table tbl_width Width table (0-100) fontsize Font size fontfamily Font family ... Passes options kbl()","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/theme_rise.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple ggplot theme for RISE formatting — theme_rise","title":"A simple ggplot theme for RISE formatting — theme_rise","text":"Use optional :)","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/theme_rise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple ggplot theme for RISE formatting — theme_rise","text":"","code":"theme_rise(   fontfamily = \"Lato\",   axissize = 13,   titlesize = 15,   margins = 12,   axisface = \"plain\",   panelDist = 0.6,   ... )"},{"path":"https://pgmj.github.io/easyRasch/reference/theme_rise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple ggplot theme for RISE formatting — theme_rise","text":"fontfamily Font family plot text axissize Font size axis labels titlesize Font size plot title margins Distance axis labels plot axisface Set \"bold\" want bold axis labels","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/theme_rise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple ggplot theme for RISE formatting — theme_rise","text":"Add + theme_rise() ggplot RIfunction outputs ggplot","code":""},{"path":"https://pgmj.github.io/easyRasch/reference/theme_rise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A simple ggplot theme for RISE formatting — theme_rise","text":"See ?element_text details available settings. Please note using theme update session defaults geom_text geom_text_repel. can add relevant line(s) manually:","code":"update_geom_defaults(\"text\", list(family = fontfamily)) + update_geom_defaults(\"text_repel\", list(family = fontfamily))"},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-033","dir":"Changelog","previous_headings":"","what":"easyRasch 0.3.3","title":"easyRasch 0.3.3","text":"also, new option cutoff = 5, filters include rows percentage results cutoff. Since RIestThetas() handle incomplete responses expected, error message now produced one incomplete responses data uses RIestThetas() function, recommending use catR::thetaEst()-based function RIestThetasCATr() instead. RIestThetas() now automatically chooses model RM PCM. updated RIestThetasCATr() function now works polytomous (PCM) dichotomous data, automatically chooses PCM RM. RIestThetasCATr() defaults use multiple cores, cpu = 4. Set value something appropriate computer, parallel::detectCores() -1.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-032","dir":"Changelog","previous_headings":"","what":"easyRasch 0.3.2","title":"easyRasch 0.3.2","text":"details documentation site using ?RIbootRestscore console installing new version.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0312","dir":"Changelog","previous_headings":"","what":"easyRasch 0.3.1.2","title":"easyRasch 0.3.1.2","text":"Bug fix RIgetfit() RIgetResidCor() using PCM result simulations returning empty. RIrestscore() additional output column indicating item location relative person mean location better reflect targeting properties.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0311","dir":"Changelog","previous_headings":"","what":"easyRasch 0.3.1.1","title":"easyRasch 0.3.1.1","text":"RIgetfitPlot() now uses c(.001,.999) intervals RIitemfit().","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-031","dir":"Changelog","previous_headings":"","what":"easyRasch 0.3.1","title":"easyRasch 0.3.1","text":"RIpartgamLD() longer shows negative gamma values. new default setting cutoff c(.001,.999). old default c(.005,.995), according preliminary simulation studies resulted increased rates false positives. RIestThetasOLD() RIestThetasOLD2() recommended missing responses items respondents. RItargeting(model = \"RM\") now sorts items according order data. RIrestscore() RIitemfit() now also output column item (average polytomous items) location. due preliminary simulation studies indicating misfitting items > 1.5 logits person mean require larger sample identify reliably.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-03","dir":"Changelog","previous_headings":"","what":"easyRasch 0.3","title":"easyRasch 0.3","text":"package name changed RISEkbmRasch easyRasch.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0246","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.4.6","title":"easyRasch 0.2.4.6","text":"RIpartgamDIF() added convenient use iarm::partgam_DIF() assess DIF. RIpartgamLD() added convenient use iarm::partgam_LD() assess local dependence. RImissing() RImissingP() now return message (plot) data missing.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0245","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.4.5","title":"easyRasch 0.2.4.5","text":"Changed caption text RIresidcorr() grammatically correct. Bug fix RItargeting() RIitemparams() use max(na.rm = TRUE).","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0244","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.4.4","title":"easyRasch 0.2.4.4","text":"implemented RItargeting() RIitemparams() fewer 3 responses cell mirt used estimate item threshold locations, since less prone extreme values conditions eRm. fewer 3 responses cell warning message appear","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0243","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.4.3","title":"easyRasch 0.2.4.3","text":"New function RIrestscore(), wrapper function simplify output iarm::item_restscore(). Fix RIitemhierarchy(), na.rm = TRUE omitted rowMeans() leading mean location items less thresholds others. Added option output = \"quarto\" output knitr::kable() table (without conditional highlighting).","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0242","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.4.2","title":"easyRasch 0.2.4.2","text":"RIitemfit() now consistently states conditional item fit based complete cases automatic caption text. RIitemfit() new option conditional highlighting misfit based rule--thumb values infit MSQ according Smith et al. (1998), since Müller (2020) showed can fairly accurate conditional infit thus useful quick look item fit. RIgetfit() now defaults use sample size conditional item fit function uses, means complete cases. option change behavior simulation function.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0241","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.4.1","title":"easyRasch 0.2.4.1","text":"New function - RIpboot() generates datasets using parametric bootstrapping.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"bug-fix-0-2-4-1","dir":"Changelog","previous_headings":"","what":"Bug fix:","title":"easyRasch 0.2.4.1","text":"RIgetfitPlot() fix /first iteration simulations missing data","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"known-issue-0-2-4-1","dir":"Changelog","previous_headings":"","what":"Known issue:","title":"easyRasch 0.2.4.1","text":"temporary fix implemented, discarding simulated datasets less 8 positive responses item.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-024","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.4","title":"easyRasch 0.2.4","text":"RIgetResidCor() RIgetfit() now replicate sample theta distribution accurately using resampling replacement (parametric bootstrapping based estimated sample thetas/item thresholds). RIgetResidCor() RIgetfit() now omit simulated datasets empty cells (zero responses response categories responses). RIgetResidCor() now automatically chooses PCM RM depending data (model option removed) RIscoreSE() support dichotomomous data automatically chooses PCM RM depending data RItileplot() new option setting text_color.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0231","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.3.1","title":"easyRasch 0.2.3.1","text":"RIitemfit() finally calculate misfit correctly sorting works Changed RIgetfit() model estimation function use psychotools::PCModel.fit() speed simulations slightly polytomous models. Like eRm::PCM() function, also uses Conditional Maximum Likelihood, produces identical results iarm::out_infit().","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-023","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.3","title":"easyRasch 0.2.3","text":"RIgetfit() now retains variable/item names data. RIitemfit() now uses conditional highlighting individual cutoff values item. RIitemfit() outputs two new variables indicating differences observed infit/outfit cutoff threshold values. RIitemfit() optionally sorts table output based misfit per item, using either “infit” “outfit”. RIgetfitPlot() optionally shows observed item fit plot. Ideally, 95% CI shown, SE output iarm::out_infit reliable according author (Müller, 2020), iarm::boot_fit() output SE, p-values.","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0221","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.2.1","title":"easyRasch 0.2.2.1","text":"Changed simulation based cutoff thresholds used RIitemfit() quantile(fitmetric, .995) .005 instead .99 .01 previous version, consistent RIgetResidCor() uses one-sided quantile(fitmetric, .99).","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-022","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.2","title":"easyRasch 0.2.2","text":"outputs conditional MSQ (ZSTD irrelevant conditional item fit) Automatically uses RM PCM depending data structure. Optional conditional highlighting simulation based cutoff values, includes cutoff intervals using output = \"table\" (default). Automatically uses RM PCM depending data structure. Modified RIgetfitPlot() accordingly. Removed RIgetfitTable() RIgetfitLoHi() since information now included output new function RIitemfit()","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-0211","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.1.1","title":"easyRasch 0.2.1.1","text":"Added 1st 99th percentiles (upper/lower limits) simulation based item fit metrics RIgetfitTable() RIitemfitPCM() RIgetfitLoHi() now use 1st/99th percentile values simulation cutoffs. RIgetfitPlot() now uses options (see ?ggdist::stat_dotsinterval details) rendering distribution simulated+estimated item fit metrics","code":"stat_dotsinterval(quantiles = iterations, point_interval = median_qi,                         layout = \"weave\", slab_color = NA,                         .width = c(0.66, 0.99)"},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"easyrasch-021","dir":"Changelog","previous_headings":"","what":"easyRasch 0.2.1","title":"easyRasch 0.2.1","text":"integration RIitemfitRM() yet. Renamed option method model RIgetfit() RIgetResidCor() consistency across functions.","code":""},{"path":[]},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"major-update-0-2-0","dir":"Changelog","previous_headings":"","what":"Major update","title":"easyRasch 0.2.0","text":"Implemented two simulation functions get cutoff values item fit residual correlations (Yen’s Q3). now, work polytomous (PCM) data. always, documentation available using ?function (without parentheses otherwise usually included).","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"new-functions-and-brief-descriptions-0-2-0","dir":"Changelog","previous_headings":"","what":"New functions, and brief descriptions:","title":"easyRasch 0.2.0","text":"RIgetfitTable() - Summarises simulation based cutoff values item. RIgetfitPlot() - Plot (one time) Based Christensen et al. (2017, DOI: 10.1177/0146621616677520). Uses dataset get appropriate cutoff values use RIresidcorr()","code":""},{"path":"https://pgmj.github.io/easyRasch/news/index.html","id":"changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Changes:","title":"easyRasch 0.2.0","text":"simcut Set TRUE want use simulation based cutoff values gf output object RIgetfit() needed simcut = TRUE example command: RIitemfitPCMtest(df, simcut = TRUE, gf = getfit)","code":""}]
